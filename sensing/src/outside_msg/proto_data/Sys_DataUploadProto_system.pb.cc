// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Sys_DataUploadProto_system.proto

#include "Sys_DataUploadProto_system.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_Sys_5fDataUploadProto_5fsystem_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SYS_CAR_DISTANCE_t_message_Sys_5fDataUploadProto_5fsystem_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Sys_5fDataUploadProto_5fsystem_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SYS_CHASSIS_t_message_Sys_5fDataUploadProto_5fsystem_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Sys_5fDataUploadProto_5fsystem_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SYS_CONTROL_INFO_t_message_Sys_5fDataUploadProto_5fsystem_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Sys_5fDataUploadProto_5fsystem_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SYS_CRUISING_SPEED_t_message_Sys_5fDataUploadProto_5fsystem_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Sys_5fDataUploadProto_5fsystem_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SYS_ECUComm_Info_t_message_Sys_5fDataUploadProto_5fsystem_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Sys_5fDataUploadProto_5fsystem_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_SYS_PARAM_SET_t_message_Sys_5fDataUploadProto_5fsystem_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Sys_5fDataUploadProto_5fsystem_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SYS_SPEED_LIMIT_t_message_Sys_5fDataUploadProto_5fsystem_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Sys_5fDataUploadProto_5fsystem_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TC397_Sys_Tasktime_message_Sys_5fDataUploadProto_5fsystem_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Sys_5fDataUploadProto_5fsystem_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_st_Display_Debug__message_Sys_5fDataUploadProto_5fsystem_2eproto;
namespace phoenix {
namespace ad_data_upload {
class SYS_CRUISING_SPEED_t_messageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SYS_CRUISING_SPEED_t_message> _instance;
} _SYS_CRUISING_SPEED_t_message_default_instance_;
class SYS_SPEED_LIMIT_t_messageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SYS_SPEED_LIMIT_t_message> _instance;
} _SYS_SPEED_LIMIT_t_message_default_instance_;
class SYS_CAR_DISTANCE_t_messageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SYS_CAR_DISTANCE_t_message> _instance;
} _SYS_CAR_DISTANCE_t_message_default_instance_;
class SYS_PARAM_SET_t_messageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SYS_PARAM_SET_t_message> _instance;
} _SYS_PARAM_SET_t_message_default_instance_;
class SYS_CONTROL_INFO_t_messageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SYS_CONTROL_INFO_t_message> _instance;
} _SYS_CONTROL_INFO_t_message_default_instance_;
class SYS_CHASSIS_t_messageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SYS_CHASSIS_t_message> _instance;
} _SYS_CHASSIS_t_message_default_instance_;
class SYS_ECUComm_Info_t_messageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SYS_ECUComm_Info_t_message> _instance;
} _SYS_ECUComm_Info_t_message_default_instance_;
class TC397_Sys_Tasktime_messageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TC397_Sys_Tasktime_message> _instance;
} _TC397_Sys_Tasktime_message_default_instance_;
class st_Display_Debug__messageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<st_Display_Debug__message> _instance;
} _st_Display_Debug__message_default_instance_;
class System_Display_Data_messageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<System_Display_Data_message> _instance;
} _System_Display_Data_message_default_instance_;
}  // namespace ad_data_upload
}  // namespace phoenix
static void InitDefaultsscc_info_SYS_CAR_DISTANCE_t_message_Sys_5fDataUploadProto_5fsystem_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::phoenix::ad_data_upload::_SYS_CAR_DISTANCE_t_message_default_instance_;
    new (ptr) ::phoenix::ad_data_upload::SYS_CAR_DISTANCE_t_message();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phoenix::ad_data_upload::SYS_CAR_DISTANCE_t_message::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SYS_CAR_DISTANCE_t_message_Sys_5fDataUploadProto_5fsystem_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_SYS_CAR_DISTANCE_t_message_Sys_5fDataUploadProto_5fsystem_2eproto}, {}};

static void InitDefaultsscc_info_SYS_CHASSIS_t_message_Sys_5fDataUploadProto_5fsystem_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::phoenix::ad_data_upload::_SYS_CHASSIS_t_message_default_instance_;
    new (ptr) ::phoenix::ad_data_upload::SYS_CHASSIS_t_message();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phoenix::ad_data_upload::SYS_CHASSIS_t_message::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SYS_CHASSIS_t_message_Sys_5fDataUploadProto_5fsystem_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_SYS_CHASSIS_t_message_Sys_5fDataUploadProto_5fsystem_2eproto}, {}};

static void InitDefaultsscc_info_SYS_CONTROL_INFO_t_message_Sys_5fDataUploadProto_5fsystem_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::phoenix::ad_data_upload::_SYS_CONTROL_INFO_t_message_default_instance_;
    new (ptr) ::phoenix::ad_data_upload::SYS_CONTROL_INFO_t_message();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phoenix::ad_data_upload::SYS_CONTROL_INFO_t_message::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SYS_CONTROL_INFO_t_message_Sys_5fDataUploadProto_5fsystem_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_SYS_CONTROL_INFO_t_message_Sys_5fDataUploadProto_5fsystem_2eproto}, {
      &scc_info_SYS_PARAM_SET_t_message_Sys_5fDataUploadProto_5fsystem_2eproto.base,}};

static void InitDefaultsscc_info_SYS_CRUISING_SPEED_t_message_Sys_5fDataUploadProto_5fsystem_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::phoenix::ad_data_upload::_SYS_CRUISING_SPEED_t_message_default_instance_;
    new (ptr) ::phoenix::ad_data_upload::SYS_CRUISING_SPEED_t_message();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phoenix::ad_data_upload::SYS_CRUISING_SPEED_t_message::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SYS_CRUISING_SPEED_t_message_Sys_5fDataUploadProto_5fsystem_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_SYS_CRUISING_SPEED_t_message_Sys_5fDataUploadProto_5fsystem_2eproto}, {}};

static void InitDefaultsscc_info_SYS_ECUComm_Info_t_message_Sys_5fDataUploadProto_5fsystem_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::phoenix::ad_data_upload::_SYS_ECUComm_Info_t_message_default_instance_;
    new (ptr) ::phoenix::ad_data_upload::SYS_ECUComm_Info_t_message();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phoenix::ad_data_upload::SYS_ECUComm_Info_t_message::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SYS_ECUComm_Info_t_message_Sys_5fDataUploadProto_5fsystem_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_SYS_ECUComm_Info_t_message_Sys_5fDataUploadProto_5fsystem_2eproto}, {}};

static void InitDefaultsscc_info_SYS_PARAM_SET_t_message_Sys_5fDataUploadProto_5fsystem_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::phoenix::ad_data_upload::_SYS_PARAM_SET_t_message_default_instance_;
    new (ptr) ::phoenix::ad_data_upload::SYS_PARAM_SET_t_message();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phoenix::ad_data_upload::SYS_PARAM_SET_t_message::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_SYS_PARAM_SET_t_message_Sys_5fDataUploadProto_5fsystem_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsscc_info_SYS_PARAM_SET_t_message_Sys_5fDataUploadProto_5fsystem_2eproto}, {
      &scc_info_SYS_CRUISING_SPEED_t_message_Sys_5fDataUploadProto_5fsystem_2eproto.base,
      &scc_info_SYS_SPEED_LIMIT_t_message_Sys_5fDataUploadProto_5fsystem_2eproto.base,
      &scc_info_SYS_CAR_DISTANCE_t_message_Sys_5fDataUploadProto_5fsystem_2eproto.base,}};

static void InitDefaultsscc_info_SYS_SPEED_LIMIT_t_message_Sys_5fDataUploadProto_5fsystem_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::phoenix::ad_data_upload::_SYS_SPEED_LIMIT_t_message_default_instance_;
    new (ptr) ::phoenix::ad_data_upload::SYS_SPEED_LIMIT_t_message();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phoenix::ad_data_upload::SYS_SPEED_LIMIT_t_message::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SYS_SPEED_LIMIT_t_message_Sys_5fDataUploadProto_5fsystem_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_SYS_SPEED_LIMIT_t_message_Sys_5fDataUploadProto_5fsystem_2eproto}, {}};

static void InitDefaultsscc_info_System_Display_Data_message_Sys_5fDataUploadProto_5fsystem_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::phoenix::ad_data_upload::_System_Display_Data_message_default_instance_;
    new (ptr) ::phoenix::ad_data_upload::System_Display_Data_message();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phoenix::ad_data_upload::System_Display_Data_message::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_System_Display_Data_message_Sys_5fDataUploadProto_5fsystem_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsscc_info_System_Display_Data_message_Sys_5fDataUploadProto_5fsystem_2eproto}, {
      &scc_info_SYS_CONTROL_INFO_t_message_Sys_5fDataUploadProto_5fsystem_2eproto.base,
      &scc_info_SYS_CHASSIS_t_message_Sys_5fDataUploadProto_5fsystem_2eproto.base,
      &scc_info_SYS_ECUComm_Info_t_message_Sys_5fDataUploadProto_5fsystem_2eproto.base,
      &scc_info_TC397_Sys_Tasktime_message_Sys_5fDataUploadProto_5fsystem_2eproto.base,
      &scc_info_st_Display_Debug__message_Sys_5fDataUploadProto_5fsystem_2eproto.base,}};

static void InitDefaultsscc_info_TC397_Sys_Tasktime_message_Sys_5fDataUploadProto_5fsystem_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::phoenix::ad_data_upload::_TC397_Sys_Tasktime_message_default_instance_;
    new (ptr) ::phoenix::ad_data_upload::TC397_Sys_Tasktime_message();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phoenix::ad_data_upload::TC397_Sys_Tasktime_message::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TC397_Sys_Tasktime_message_Sys_5fDataUploadProto_5fsystem_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_TC397_Sys_Tasktime_message_Sys_5fDataUploadProto_5fsystem_2eproto}, {}};

static void InitDefaultsscc_info_st_Display_Debug__message_Sys_5fDataUploadProto_5fsystem_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::phoenix::ad_data_upload::_st_Display_Debug__message_default_instance_;
    new (ptr) ::phoenix::ad_data_upload::st_Display_Debug__message();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phoenix::ad_data_upload::st_Display_Debug__message::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_st_Display_Debug__message_Sys_5fDataUploadProto_5fsystem_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_st_Display_Debug__message_Sys_5fDataUploadProto_5fsystem_2eproto}, {}};

namespace phoenix {
namespace ad_data_upload {

// ===================================================================

void SYS_CRUISING_SPEED_t_message::InitAsDefaultInstance() {
}
class SYS_CRUISING_SPEED_t_message::_Internal {
 public:
};

SYS_CRUISING_SPEED_t_message::SYS_CRUISING_SPEED_t_message()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:phoenix.ad_data_upload.SYS_CRUISING_SPEED_t_message)
}
SYS_CRUISING_SPEED_t_message::SYS_CRUISING_SPEED_t_message(const SYS_CRUISING_SPEED_t_message& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&valid_, &from.valid_,
    static_cast<size_t>(reinterpret_cast<char*>(&rightrange_) -
    reinterpret_cast<char*>(&valid_)) + sizeof(rightrange_));
  // @@protoc_insertion_point(copy_constructor:phoenix.ad_data_upload.SYS_CRUISING_SPEED_t_message)
}

void SYS_CRUISING_SPEED_t_message::SharedCtor() {
  ::memset(&valid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rightrange_) -
      reinterpret_cast<char*>(&valid_)) + sizeof(rightrange_));
}

SYS_CRUISING_SPEED_t_message::~SYS_CRUISING_SPEED_t_message() {
  // @@protoc_insertion_point(destructor:phoenix.ad_data_upload.SYS_CRUISING_SPEED_t_message)
  SharedDtor();
}

void SYS_CRUISING_SPEED_t_message::SharedDtor() {
}

void SYS_CRUISING_SPEED_t_message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SYS_CRUISING_SPEED_t_message& SYS_CRUISING_SPEED_t_message::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SYS_CRUISING_SPEED_t_message_Sys_5fDataUploadProto_5fsystem_2eproto.base);
  return *internal_default_instance();
}


void SYS_CRUISING_SPEED_t_message::Clear() {
// @@protoc_insertion_point(message_clear_start:phoenix.ad_data_upload.SYS_CRUISING_SPEED_t_message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&valid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rightrange_) -
      reinterpret_cast<char*>(&valid_)) + sizeof(rightrange_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SYS_CRUISING_SPEED_t_message::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool valid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          valid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 cruisingspeed = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          cruisingspeed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 leftrange = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          leftrange_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 rightrange = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          rightrange_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SYS_CRUISING_SPEED_t_message::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:phoenix.ad_data_upload.SYS_CRUISING_SPEED_t_message)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool valid = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &valid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cruisingspeed = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cruisingspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 leftrange = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leftrange_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rightrange = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rightrange_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phoenix.ad_data_upload.SYS_CRUISING_SPEED_t_message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phoenix.ad_data_upload.SYS_CRUISING_SPEED_t_message)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SYS_CRUISING_SPEED_t_message::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phoenix.ad_data_upload.SYS_CRUISING_SPEED_t_message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool valid = 1;
  if (this->valid() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(1, this->valid(), output);
  }

  // uint32 cruisingspeed = 2;
  if (this->cruisingspeed() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(2, this->cruisingspeed(), output);
  }

  // uint32 leftrange = 3;
  if (this->leftrange() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(3, this->leftrange(), output);
  }

  // uint32 rightrange = 4;
  if (this->rightrange() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(4, this->rightrange(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:phoenix.ad_data_upload.SYS_CRUISING_SPEED_t_message)
}

size_t SYS_CRUISING_SPEED_t_message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phoenix.ad_data_upload.SYS_CRUISING_SPEED_t_message)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool valid = 1;
  if (this->valid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 cruisingspeed = 2;
  if (this->cruisingspeed() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->cruisingspeed());
  }

  // uint32 leftrange = 3;
  if (this->leftrange() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->leftrange());
  }

  // uint32 rightrange = 4;
  if (this->rightrange() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->rightrange());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SYS_CRUISING_SPEED_t_message::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const SYS_CRUISING_SPEED_t_message*>(
      &from));
}

void SYS_CRUISING_SPEED_t_message::MergeFrom(const SYS_CRUISING_SPEED_t_message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phoenix.ad_data_upload.SYS_CRUISING_SPEED_t_message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.valid() != 0) {
    set_valid(from.valid());
  }
  if (from.cruisingspeed() != 0) {
    set_cruisingspeed(from.cruisingspeed());
  }
  if (from.leftrange() != 0) {
    set_leftrange(from.leftrange());
  }
  if (from.rightrange() != 0) {
    set_rightrange(from.rightrange());
  }
}

void SYS_CRUISING_SPEED_t_message::CopyFrom(const SYS_CRUISING_SPEED_t_message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phoenix.ad_data_upload.SYS_CRUISING_SPEED_t_message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SYS_CRUISING_SPEED_t_message::IsInitialized() const {
  return true;
}

void SYS_CRUISING_SPEED_t_message::InternalSwap(SYS_CRUISING_SPEED_t_message* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(valid_, other->valid_);
  swap(cruisingspeed_, other->cruisingspeed_);
  swap(leftrange_, other->leftrange_);
  swap(rightrange_, other->rightrange_);
}

std::string SYS_CRUISING_SPEED_t_message::GetTypeName() const {
  return "phoenix.ad_data_upload.SYS_CRUISING_SPEED_t_message";
}


// ===================================================================

void SYS_SPEED_LIMIT_t_message::InitAsDefaultInstance() {
}
class SYS_SPEED_LIMIT_t_message::_Internal {
 public:
};

SYS_SPEED_LIMIT_t_message::SYS_SPEED_LIMIT_t_message()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:phoenix.ad_data_upload.SYS_SPEED_LIMIT_t_message)
}
SYS_SPEED_LIMIT_t_message::SYS_SPEED_LIMIT_t_message(const SYS_SPEED_LIMIT_t_message& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&valid_, &from.valid_,
    static_cast<size_t>(reinterpret_cast<char*>(&rightrange_) -
    reinterpret_cast<char*>(&valid_)) + sizeof(rightrange_));
  // @@protoc_insertion_point(copy_constructor:phoenix.ad_data_upload.SYS_SPEED_LIMIT_t_message)
}

void SYS_SPEED_LIMIT_t_message::SharedCtor() {
  ::memset(&valid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rightrange_) -
      reinterpret_cast<char*>(&valid_)) + sizeof(rightrange_));
}

SYS_SPEED_LIMIT_t_message::~SYS_SPEED_LIMIT_t_message() {
  // @@protoc_insertion_point(destructor:phoenix.ad_data_upload.SYS_SPEED_LIMIT_t_message)
  SharedDtor();
}

void SYS_SPEED_LIMIT_t_message::SharedDtor() {
}

void SYS_SPEED_LIMIT_t_message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SYS_SPEED_LIMIT_t_message& SYS_SPEED_LIMIT_t_message::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SYS_SPEED_LIMIT_t_message_Sys_5fDataUploadProto_5fsystem_2eproto.base);
  return *internal_default_instance();
}


void SYS_SPEED_LIMIT_t_message::Clear() {
// @@protoc_insertion_point(message_clear_start:phoenix.ad_data_upload.SYS_SPEED_LIMIT_t_message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&valid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rightrange_) -
      reinterpret_cast<char*>(&valid_)) + sizeof(rightrange_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SYS_SPEED_LIMIT_t_message::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool valid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          valid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 speedlimit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          speedlimit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 leftrange = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          leftrange_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 rightrange = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          rightrange_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SYS_SPEED_LIMIT_t_message::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:phoenix.ad_data_upload.SYS_SPEED_LIMIT_t_message)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool valid = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &valid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 speedlimit = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &speedlimit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 leftrange = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leftrange_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rightrange = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rightrange_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phoenix.ad_data_upload.SYS_SPEED_LIMIT_t_message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phoenix.ad_data_upload.SYS_SPEED_LIMIT_t_message)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SYS_SPEED_LIMIT_t_message::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phoenix.ad_data_upload.SYS_SPEED_LIMIT_t_message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool valid = 1;
  if (this->valid() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(1, this->valid(), output);
  }

  // uint32 speedlimit = 2;
  if (this->speedlimit() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(2, this->speedlimit(), output);
  }

  // uint32 leftrange = 3;
  if (this->leftrange() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(3, this->leftrange(), output);
  }

  // uint32 rightrange = 4;
  if (this->rightrange() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(4, this->rightrange(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:phoenix.ad_data_upload.SYS_SPEED_LIMIT_t_message)
}

size_t SYS_SPEED_LIMIT_t_message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phoenix.ad_data_upload.SYS_SPEED_LIMIT_t_message)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool valid = 1;
  if (this->valid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 speedlimit = 2;
  if (this->speedlimit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->speedlimit());
  }

  // uint32 leftrange = 3;
  if (this->leftrange() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->leftrange());
  }

  // uint32 rightrange = 4;
  if (this->rightrange() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->rightrange());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SYS_SPEED_LIMIT_t_message::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const SYS_SPEED_LIMIT_t_message*>(
      &from));
}

void SYS_SPEED_LIMIT_t_message::MergeFrom(const SYS_SPEED_LIMIT_t_message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phoenix.ad_data_upload.SYS_SPEED_LIMIT_t_message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.valid() != 0) {
    set_valid(from.valid());
  }
  if (from.speedlimit() != 0) {
    set_speedlimit(from.speedlimit());
  }
  if (from.leftrange() != 0) {
    set_leftrange(from.leftrange());
  }
  if (from.rightrange() != 0) {
    set_rightrange(from.rightrange());
  }
}

void SYS_SPEED_LIMIT_t_message::CopyFrom(const SYS_SPEED_LIMIT_t_message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phoenix.ad_data_upload.SYS_SPEED_LIMIT_t_message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SYS_SPEED_LIMIT_t_message::IsInitialized() const {
  return true;
}

void SYS_SPEED_LIMIT_t_message::InternalSwap(SYS_SPEED_LIMIT_t_message* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(valid_, other->valid_);
  swap(speedlimit_, other->speedlimit_);
  swap(leftrange_, other->leftrange_);
  swap(rightrange_, other->rightrange_);
}

std::string SYS_SPEED_LIMIT_t_message::GetTypeName() const {
  return "phoenix.ad_data_upload.SYS_SPEED_LIMIT_t_message";
}


// ===================================================================

void SYS_CAR_DISTANCE_t_message::InitAsDefaultInstance() {
}
class SYS_CAR_DISTANCE_t_message::_Internal {
 public:
};

SYS_CAR_DISTANCE_t_message::SYS_CAR_DISTANCE_t_message()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:phoenix.ad_data_upload.SYS_CAR_DISTANCE_t_message)
}
SYS_CAR_DISTANCE_t_message::SYS_CAR_DISTANCE_t_message(const SYS_CAR_DISTANCE_t_message& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&valid_, &from.valid_,
    static_cast<size_t>(reinterpret_cast<char*>(&rightrange_) -
    reinterpret_cast<char*>(&valid_)) + sizeof(rightrange_));
  // @@protoc_insertion_point(copy_constructor:phoenix.ad_data_upload.SYS_CAR_DISTANCE_t_message)
}

void SYS_CAR_DISTANCE_t_message::SharedCtor() {
  ::memset(&valid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rightrange_) -
      reinterpret_cast<char*>(&valid_)) + sizeof(rightrange_));
}

SYS_CAR_DISTANCE_t_message::~SYS_CAR_DISTANCE_t_message() {
  // @@protoc_insertion_point(destructor:phoenix.ad_data_upload.SYS_CAR_DISTANCE_t_message)
  SharedDtor();
}

void SYS_CAR_DISTANCE_t_message::SharedDtor() {
}

void SYS_CAR_DISTANCE_t_message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SYS_CAR_DISTANCE_t_message& SYS_CAR_DISTANCE_t_message::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SYS_CAR_DISTANCE_t_message_Sys_5fDataUploadProto_5fsystem_2eproto.base);
  return *internal_default_instance();
}


void SYS_CAR_DISTANCE_t_message::Clear() {
// @@protoc_insertion_point(message_clear_start:phoenix.ad_data_upload.SYS_CAR_DISTANCE_t_message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&valid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rightrange_) -
      reinterpret_cast<char*>(&valid_)) + sizeof(rightrange_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SYS_CAR_DISTANCE_t_message::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool valid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          valid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 distancelimit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          distancelimit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 leftrange = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          leftrange_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 rightrange = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          rightrange_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SYS_CAR_DISTANCE_t_message::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:phoenix.ad_data_upload.SYS_CAR_DISTANCE_t_message)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool valid = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &valid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 distancelimit = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &distancelimit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 leftrange = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leftrange_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rightrange = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rightrange_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phoenix.ad_data_upload.SYS_CAR_DISTANCE_t_message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phoenix.ad_data_upload.SYS_CAR_DISTANCE_t_message)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SYS_CAR_DISTANCE_t_message::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phoenix.ad_data_upload.SYS_CAR_DISTANCE_t_message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool valid = 1;
  if (this->valid() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(1, this->valid(), output);
  }

  // uint32 distancelimit = 2;
  if (this->distancelimit() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(2, this->distancelimit(), output);
  }

  // uint32 leftrange = 3;
  if (this->leftrange() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(3, this->leftrange(), output);
  }

  // uint32 rightrange = 4;
  if (this->rightrange() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(4, this->rightrange(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:phoenix.ad_data_upload.SYS_CAR_DISTANCE_t_message)
}

size_t SYS_CAR_DISTANCE_t_message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phoenix.ad_data_upload.SYS_CAR_DISTANCE_t_message)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool valid = 1;
  if (this->valid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 distancelimit = 2;
  if (this->distancelimit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->distancelimit());
  }

  // uint32 leftrange = 3;
  if (this->leftrange() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->leftrange());
  }

  // uint32 rightrange = 4;
  if (this->rightrange() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->rightrange());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SYS_CAR_DISTANCE_t_message::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const SYS_CAR_DISTANCE_t_message*>(
      &from));
}

void SYS_CAR_DISTANCE_t_message::MergeFrom(const SYS_CAR_DISTANCE_t_message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phoenix.ad_data_upload.SYS_CAR_DISTANCE_t_message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.valid() != 0) {
    set_valid(from.valid());
  }
  if (from.distancelimit() != 0) {
    set_distancelimit(from.distancelimit());
  }
  if (from.leftrange() != 0) {
    set_leftrange(from.leftrange());
  }
  if (from.rightrange() != 0) {
    set_rightrange(from.rightrange());
  }
}

void SYS_CAR_DISTANCE_t_message::CopyFrom(const SYS_CAR_DISTANCE_t_message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phoenix.ad_data_upload.SYS_CAR_DISTANCE_t_message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SYS_CAR_DISTANCE_t_message::IsInitialized() const {
  return true;
}

void SYS_CAR_DISTANCE_t_message::InternalSwap(SYS_CAR_DISTANCE_t_message* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(valid_, other->valid_);
  swap(distancelimit_, other->distancelimit_);
  swap(leftrange_, other->leftrange_);
  swap(rightrange_, other->rightrange_);
}

std::string SYS_CAR_DISTANCE_t_message::GetTypeName() const {
  return "phoenix.ad_data_upload.SYS_CAR_DISTANCE_t_message";
}


// ===================================================================

void SYS_PARAM_SET_t_message::InitAsDefaultInstance() {
  ::phoenix::ad_data_upload::_SYS_PARAM_SET_t_message_default_instance_._instance.get_mutable()->sys_cruising_speed_ = const_cast< ::phoenix::ad_data_upload::SYS_CRUISING_SPEED_t_message*>(
      ::phoenix::ad_data_upload::SYS_CRUISING_SPEED_t_message::internal_default_instance());
  ::phoenix::ad_data_upload::_SYS_PARAM_SET_t_message_default_instance_._instance.get_mutable()->sys_speed_limit_ = const_cast< ::phoenix::ad_data_upload::SYS_SPEED_LIMIT_t_message*>(
      ::phoenix::ad_data_upload::SYS_SPEED_LIMIT_t_message::internal_default_instance());
  ::phoenix::ad_data_upload::_SYS_PARAM_SET_t_message_default_instance_._instance.get_mutable()->sys_car_distance_ = const_cast< ::phoenix::ad_data_upload::SYS_CAR_DISTANCE_t_message*>(
      ::phoenix::ad_data_upload::SYS_CAR_DISTANCE_t_message::internal_default_instance());
}
class SYS_PARAM_SET_t_message::_Internal {
 public:
  static const ::phoenix::ad_data_upload::SYS_CRUISING_SPEED_t_message& sys_cruising_speed(const SYS_PARAM_SET_t_message* msg);
  static const ::phoenix::ad_data_upload::SYS_SPEED_LIMIT_t_message& sys_speed_limit(const SYS_PARAM_SET_t_message* msg);
  static const ::phoenix::ad_data_upload::SYS_CAR_DISTANCE_t_message& sys_car_distance(const SYS_PARAM_SET_t_message* msg);
};

const ::phoenix::ad_data_upload::SYS_CRUISING_SPEED_t_message&
SYS_PARAM_SET_t_message::_Internal::sys_cruising_speed(const SYS_PARAM_SET_t_message* msg) {
  return *msg->sys_cruising_speed_;
}
const ::phoenix::ad_data_upload::SYS_SPEED_LIMIT_t_message&
SYS_PARAM_SET_t_message::_Internal::sys_speed_limit(const SYS_PARAM_SET_t_message* msg) {
  return *msg->sys_speed_limit_;
}
const ::phoenix::ad_data_upload::SYS_CAR_DISTANCE_t_message&
SYS_PARAM_SET_t_message::_Internal::sys_car_distance(const SYS_PARAM_SET_t_message* msg) {
  return *msg->sys_car_distance_;
}
SYS_PARAM_SET_t_message::SYS_PARAM_SET_t_message()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:phoenix.ad_data_upload.SYS_PARAM_SET_t_message)
}
SYS_PARAM_SET_t_message::SYS_PARAM_SET_t_message(const SYS_PARAM_SET_t_message& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sys_cruising_speed()) {
    sys_cruising_speed_ = new ::phoenix::ad_data_upload::SYS_CRUISING_SPEED_t_message(*from.sys_cruising_speed_);
  } else {
    sys_cruising_speed_ = nullptr;
  }
  if (from.has_sys_speed_limit()) {
    sys_speed_limit_ = new ::phoenix::ad_data_upload::SYS_SPEED_LIMIT_t_message(*from.sys_speed_limit_);
  } else {
    sys_speed_limit_ = nullptr;
  }
  if (from.has_sys_car_distance()) {
    sys_car_distance_ = new ::phoenix::ad_data_upload::SYS_CAR_DISTANCE_t_message(*from.sys_car_distance_);
  } else {
    sys_car_distance_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:phoenix.ad_data_upload.SYS_PARAM_SET_t_message)
}

void SYS_PARAM_SET_t_message::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SYS_PARAM_SET_t_message_Sys_5fDataUploadProto_5fsystem_2eproto.base);
  ::memset(&sys_cruising_speed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sys_car_distance_) -
      reinterpret_cast<char*>(&sys_cruising_speed_)) + sizeof(sys_car_distance_));
}

SYS_PARAM_SET_t_message::~SYS_PARAM_SET_t_message() {
  // @@protoc_insertion_point(destructor:phoenix.ad_data_upload.SYS_PARAM_SET_t_message)
  SharedDtor();
}

void SYS_PARAM_SET_t_message::SharedDtor() {
  if (this != internal_default_instance()) delete sys_cruising_speed_;
  if (this != internal_default_instance()) delete sys_speed_limit_;
  if (this != internal_default_instance()) delete sys_car_distance_;
}

void SYS_PARAM_SET_t_message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SYS_PARAM_SET_t_message& SYS_PARAM_SET_t_message::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SYS_PARAM_SET_t_message_Sys_5fDataUploadProto_5fsystem_2eproto.base);
  return *internal_default_instance();
}


void SYS_PARAM_SET_t_message::Clear() {
// @@protoc_insertion_point(message_clear_start:phoenix.ad_data_upload.SYS_PARAM_SET_t_message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && sys_cruising_speed_ != nullptr) {
    delete sys_cruising_speed_;
  }
  sys_cruising_speed_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && sys_speed_limit_ != nullptr) {
    delete sys_speed_limit_;
  }
  sys_speed_limit_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && sys_car_distance_ != nullptr) {
    delete sys_car_distance_;
  }
  sys_car_distance_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SYS_PARAM_SET_t_message::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .phoenix.ad_data_upload.SYS_CRUISING_SPEED_t_message sys_cruising_speed = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_sys_cruising_speed(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .phoenix.ad_data_upload.SYS_SPEED_LIMIT_t_message sys_speed_limit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_sys_speed_limit(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .phoenix.ad_data_upload.SYS_CAR_DISTANCE_t_message sys_car_distance = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_sys_car_distance(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SYS_PARAM_SET_t_message::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:phoenix.ad_data_upload.SYS_PARAM_SET_t_message)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .phoenix.ad_data_upload.SYS_CRUISING_SPEED_t_message sys_cruising_speed = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_sys_cruising_speed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .phoenix.ad_data_upload.SYS_SPEED_LIMIT_t_message sys_speed_limit = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_sys_speed_limit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .phoenix.ad_data_upload.SYS_CAR_DISTANCE_t_message sys_car_distance = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_sys_car_distance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phoenix.ad_data_upload.SYS_PARAM_SET_t_message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phoenix.ad_data_upload.SYS_PARAM_SET_t_message)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SYS_PARAM_SET_t_message::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phoenix.ad_data_upload.SYS_PARAM_SET_t_message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .phoenix.ad_data_upload.SYS_CRUISING_SPEED_t_message sys_cruising_speed = 1;
  if (this->has_sys_cruising_speed()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1, _Internal::sys_cruising_speed(this), output);
  }

  // .phoenix.ad_data_upload.SYS_SPEED_LIMIT_t_message sys_speed_limit = 2;
  if (this->has_sys_speed_limit()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      2, _Internal::sys_speed_limit(this), output);
  }

  // .phoenix.ad_data_upload.SYS_CAR_DISTANCE_t_message sys_car_distance = 3;
  if (this->has_sys_car_distance()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      3, _Internal::sys_car_distance(this), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:phoenix.ad_data_upload.SYS_PARAM_SET_t_message)
}

size_t SYS_PARAM_SET_t_message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phoenix.ad_data_upload.SYS_PARAM_SET_t_message)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .phoenix.ad_data_upload.SYS_CRUISING_SPEED_t_message sys_cruising_speed = 1;
  if (this->has_sys_cruising_speed()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *sys_cruising_speed_);
  }

  // .phoenix.ad_data_upload.SYS_SPEED_LIMIT_t_message sys_speed_limit = 2;
  if (this->has_sys_speed_limit()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *sys_speed_limit_);
  }

  // .phoenix.ad_data_upload.SYS_CAR_DISTANCE_t_message sys_car_distance = 3;
  if (this->has_sys_car_distance()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *sys_car_distance_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SYS_PARAM_SET_t_message::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const SYS_PARAM_SET_t_message*>(
      &from));
}

void SYS_PARAM_SET_t_message::MergeFrom(const SYS_PARAM_SET_t_message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phoenix.ad_data_upload.SYS_PARAM_SET_t_message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sys_cruising_speed()) {
    mutable_sys_cruising_speed()->::phoenix::ad_data_upload::SYS_CRUISING_SPEED_t_message::MergeFrom(from.sys_cruising_speed());
  }
  if (from.has_sys_speed_limit()) {
    mutable_sys_speed_limit()->::phoenix::ad_data_upload::SYS_SPEED_LIMIT_t_message::MergeFrom(from.sys_speed_limit());
  }
  if (from.has_sys_car_distance()) {
    mutable_sys_car_distance()->::phoenix::ad_data_upload::SYS_CAR_DISTANCE_t_message::MergeFrom(from.sys_car_distance());
  }
}

void SYS_PARAM_SET_t_message::CopyFrom(const SYS_PARAM_SET_t_message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phoenix.ad_data_upload.SYS_PARAM_SET_t_message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SYS_PARAM_SET_t_message::IsInitialized() const {
  return true;
}

void SYS_PARAM_SET_t_message::InternalSwap(SYS_PARAM_SET_t_message* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(sys_cruising_speed_, other->sys_cruising_speed_);
  swap(sys_speed_limit_, other->sys_speed_limit_);
  swap(sys_car_distance_, other->sys_car_distance_);
}

std::string SYS_PARAM_SET_t_message::GetTypeName() const {
  return "phoenix.ad_data_upload.SYS_PARAM_SET_t_message";
}


// ===================================================================

void SYS_CONTROL_INFO_t_message::InitAsDefaultInstance() {
  ::phoenix::ad_data_upload::_SYS_CONTROL_INFO_t_message_default_instance_._instance.get_mutable()->sys_comm_info_ = const_cast< ::phoenix::ad_data_upload::SYS_PARAM_SET_t_message*>(
      ::phoenix::ad_data_upload::SYS_PARAM_SET_t_message::internal_default_instance());
}
class SYS_CONTROL_INFO_t_message::_Internal {
 public:
  static const ::phoenix::ad_data_upload::SYS_PARAM_SET_t_message& sys_comm_info(const SYS_CONTROL_INFO_t_message* msg);
};

const ::phoenix::ad_data_upload::SYS_PARAM_SET_t_message&
SYS_CONTROL_INFO_t_message::_Internal::sys_comm_info(const SYS_CONTROL_INFO_t_message* msg) {
  return *msg->sys_comm_info_;
}
SYS_CONTROL_INFO_t_message::SYS_CONTROL_INFO_t_message()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:phoenix.ad_data_upload.SYS_CONTROL_INFO_t_message)
}
SYS_CONTROL_INFO_t_message::SYS_CONTROL_INFO_t_message(const SYS_CONTROL_INFO_t_message& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sys_comm_info()) {
    sys_comm_info_ = new ::phoenix::ad_data_upload::SYS_PARAM_SET_t_message(*from.sys_comm_info_);
  } else {
    sys_comm_info_ = nullptr;
  }
  ::memcpy(&admode_, &from.admode_,
    static_cast<size_t>(reinterpret_cast<char*>(&turnlight_right_) -
    reinterpret_cast<char*>(&admode_)) + sizeof(turnlight_right_));
  // @@protoc_insertion_point(copy_constructor:phoenix.ad_data_upload.SYS_CONTROL_INFO_t_message)
}

void SYS_CONTROL_INFO_t_message::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SYS_CONTROL_INFO_t_message_Sys_5fDataUploadProto_5fsystem_2eproto.base);
  ::memset(&sys_comm_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&turnlight_right_) -
      reinterpret_cast<char*>(&sys_comm_info_)) + sizeof(turnlight_right_));
}

SYS_CONTROL_INFO_t_message::~SYS_CONTROL_INFO_t_message() {
  // @@protoc_insertion_point(destructor:phoenix.ad_data_upload.SYS_CONTROL_INFO_t_message)
  SharedDtor();
}

void SYS_CONTROL_INFO_t_message::SharedDtor() {
  if (this != internal_default_instance()) delete sys_comm_info_;
}

void SYS_CONTROL_INFO_t_message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SYS_CONTROL_INFO_t_message& SYS_CONTROL_INFO_t_message::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SYS_CONTROL_INFO_t_message_Sys_5fDataUploadProto_5fsystem_2eproto.base);
  return *internal_default_instance();
}


void SYS_CONTROL_INFO_t_message::Clear() {
// @@protoc_insertion_point(message_clear_start:phoenix.ad_data_upload.SYS_CONTROL_INFO_t_message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && sys_comm_info_ != nullptr) {
    delete sys_comm_info_;
  }
  sys_comm_info_ = nullptr;
  ::memset(&admode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&turnlight_right_) -
      reinterpret_cast<char*>(&admode_)) + sizeof(turnlight_right_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SYS_CONTROL_INFO_t_message::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 ADMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          admode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 ADModeOfSteering = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          admodeofsteering_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 ADModeOfBCM = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          admodeofbcm_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 ADModeOfVECU = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          admodeofvecu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 ADModeOfSCU = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          admodeofscu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .phoenix.ad_data_upload.SYS_PARAM_SET_t_message Sys_Comm_Info = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(mutable_sys_comm_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 turnlight_left = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          turnlight_left_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 turnlight_right = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          turnlight_right_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SYS_CONTROL_INFO_t_message::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:phoenix.ad_data_upload.SYS_CONTROL_INFO_t_message)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 ADMode = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &admode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ADModeOfSteering = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &admodeofsteering_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ADModeOfBCM = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &admodeofbcm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ADModeOfVECU = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &admodeofvecu_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ADModeOfSCU = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &admodeofscu_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .phoenix.ad_data_upload.SYS_PARAM_SET_t_message Sys_Comm_Info = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_sys_comm_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 turnlight_left = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &turnlight_left_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 turnlight_right = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &turnlight_right_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phoenix.ad_data_upload.SYS_CONTROL_INFO_t_message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phoenix.ad_data_upload.SYS_CONTROL_INFO_t_message)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SYS_CONTROL_INFO_t_message::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phoenix.ad_data_upload.SYS_CONTROL_INFO_t_message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ADMode = 1;
  if (this->admode() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(1, this->admode(), output);
  }

  // uint32 ADModeOfSteering = 2;
  if (this->admodeofsteering() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(2, this->admodeofsteering(), output);
  }

  // uint32 ADModeOfBCM = 3;
  if (this->admodeofbcm() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(3, this->admodeofbcm(), output);
  }

  // uint32 ADModeOfVECU = 4;
  if (this->admodeofvecu() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(4, this->admodeofvecu(), output);
  }

  // uint32 ADModeOfSCU = 5;
  if (this->admodeofscu() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(5, this->admodeofscu(), output);
  }

  // .phoenix.ad_data_upload.SYS_PARAM_SET_t_message Sys_Comm_Info = 6;
  if (this->has_sys_comm_info()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      6, _Internal::sys_comm_info(this), output);
  }

  // uint32 turnlight_left = 7;
  if (this->turnlight_left() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(7, this->turnlight_left(), output);
  }

  // uint32 turnlight_right = 8;
  if (this->turnlight_right() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(8, this->turnlight_right(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:phoenix.ad_data_upload.SYS_CONTROL_INFO_t_message)
}

size_t SYS_CONTROL_INFO_t_message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phoenix.ad_data_upload.SYS_CONTROL_INFO_t_message)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .phoenix.ad_data_upload.SYS_PARAM_SET_t_message Sys_Comm_Info = 6;
  if (this->has_sys_comm_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *sys_comm_info_);
  }

  // uint32 ADMode = 1;
  if (this->admode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->admode());
  }

  // uint32 ADModeOfSteering = 2;
  if (this->admodeofsteering() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->admodeofsteering());
  }

  // uint32 ADModeOfBCM = 3;
  if (this->admodeofbcm() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->admodeofbcm());
  }

  // uint32 ADModeOfVECU = 4;
  if (this->admodeofvecu() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->admodeofvecu());
  }

  // uint32 ADModeOfSCU = 5;
  if (this->admodeofscu() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->admodeofscu());
  }

  // uint32 turnlight_left = 7;
  if (this->turnlight_left() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->turnlight_left());
  }

  // uint32 turnlight_right = 8;
  if (this->turnlight_right() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->turnlight_right());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SYS_CONTROL_INFO_t_message::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const SYS_CONTROL_INFO_t_message*>(
      &from));
}

void SYS_CONTROL_INFO_t_message::MergeFrom(const SYS_CONTROL_INFO_t_message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phoenix.ad_data_upload.SYS_CONTROL_INFO_t_message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sys_comm_info()) {
    mutable_sys_comm_info()->::phoenix::ad_data_upload::SYS_PARAM_SET_t_message::MergeFrom(from.sys_comm_info());
  }
  if (from.admode() != 0) {
    set_admode(from.admode());
  }
  if (from.admodeofsteering() != 0) {
    set_admodeofsteering(from.admodeofsteering());
  }
  if (from.admodeofbcm() != 0) {
    set_admodeofbcm(from.admodeofbcm());
  }
  if (from.admodeofvecu() != 0) {
    set_admodeofvecu(from.admodeofvecu());
  }
  if (from.admodeofscu() != 0) {
    set_admodeofscu(from.admodeofscu());
  }
  if (from.turnlight_left() != 0) {
    set_turnlight_left(from.turnlight_left());
  }
  if (from.turnlight_right() != 0) {
    set_turnlight_right(from.turnlight_right());
  }
}

void SYS_CONTROL_INFO_t_message::CopyFrom(const SYS_CONTROL_INFO_t_message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phoenix.ad_data_upload.SYS_CONTROL_INFO_t_message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SYS_CONTROL_INFO_t_message::IsInitialized() const {
  return true;
}

void SYS_CONTROL_INFO_t_message::InternalSwap(SYS_CONTROL_INFO_t_message* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(sys_comm_info_, other->sys_comm_info_);
  swap(admode_, other->admode_);
  swap(admodeofsteering_, other->admodeofsteering_);
  swap(admodeofbcm_, other->admodeofbcm_);
  swap(admodeofvecu_, other->admodeofvecu_);
  swap(admodeofscu_, other->admodeofscu_);
  swap(turnlight_left_, other->turnlight_left_);
  swap(turnlight_right_, other->turnlight_right_);
}

std::string SYS_CONTROL_INFO_t_message::GetTypeName() const {
  return "phoenix.ad_data_upload.SYS_CONTROL_INFO_t_message";
}


// ===================================================================

void SYS_CHASSIS_t_message::InitAsDefaultInstance() {
}
class SYS_CHASSIS_t_message::_Internal {
 public:
};

SYS_CHASSIS_t_message::SYS_CHASSIS_t_message()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:phoenix.ad_data_upload.SYS_CHASSIS_t_message)
}
SYS_CHASSIS_t_message::SYS_CHASSIS_t_message(const SYS_CHASSIS_t_message& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&drivingmode_, &from.drivingmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&acceleration_) -
    reinterpret_cast<char*>(&drivingmode_)) + sizeof(acceleration_));
  // @@protoc_insertion_point(copy_constructor:phoenix.ad_data_upload.SYS_CHASSIS_t_message)
}

void SYS_CHASSIS_t_message::SharedCtor() {
  ::memset(&drivingmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&acceleration_) -
      reinterpret_cast<char*>(&drivingmode_)) + sizeof(acceleration_));
}

SYS_CHASSIS_t_message::~SYS_CHASSIS_t_message() {
  // @@protoc_insertion_point(destructor:phoenix.ad_data_upload.SYS_CHASSIS_t_message)
  SharedDtor();
}

void SYS_CHASSIS_t_message::SharedDtor() {
}

void SYS_CHASSIS_t_message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SYS_CHASSIS_t_message& SYS_CHASSIS_t_message::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SYS_CHASSIS_t_message_Sys_5fDataUploadProto_5fsystem_2eproto.base);
  return *internal_default_instance();
}


void SYS_CHASSIS_t_message::Clear() {
// @@protoc_insertion_point(message_clear_start:phoenix.ad_data_upload.SYS_CHASSIS_t_message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&drivingmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&acceleration_) -
      reinterpret_cast<char*>(&drivingmode_)) + sizeof(acceleration_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SYS_CHASSIS_t_message::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 drivingmode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          drivingmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float steeringwheelangle = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          steeringwheelangle_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float brakepedalvalue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          brakepedalvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float accpedalvalue = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          accpedalvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float velocity = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          velocity_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float acceleration = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          acceleration_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SYS_CHASSIS_t_message::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:phoenix.ad_data_upload.SYS_CHASSIS_t_message)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 drivingmode = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &drivingmode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float steeringwheelangle = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (21 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &steeringwheelangle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float brakepedalvalue = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (29 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &brakepedalvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float accpedalvalue = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (37 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &accpedalvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float velocity = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (45 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &velocity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float acceleration = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (53 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &acceleration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phoenix.ad_data_upload.SYS_CHASSIS_t_message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phoenix.ad_data_upload.SYS_CHASSIS_t_message)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SYS_CHASSIS_t_message::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phoenix.ad_data_upload.SYS_CHASSIS_t_message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 drivingmode = 1;
  if (this->drivingmode() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(1, this->drivingmode(), output);
  }

  // float steeringwheelangle = 2;
  if (!(this->steeringwheelangle() <= 0 && this->steeringwheelangle() >= 0)) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(2, this->steeringwheelangle(), output);
  }

  // float brakepedalvalue = 3;
  if (!(this->brakepedalvalue() <= 0 && this->brakepedalvalue() >= 0)) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(3, this->brakepedalvalue(), output);
  }

  // float accpedalvalue = 4;
  if (!(this->accpedalvalue() <= 0 && this->accpedalvalue() >= 0)) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(4, this->accpedalvalue(), output);
  }

  // float velocity = 5;
  if (!(this->velocity() <= 0 && this->velocity() >= 0)) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(5, this->velocity(), output);
  }

  // float acceleration = 6;
  if (!(this->acceleration() <= 0 && this->acceleration() >= 0)) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(6, this->acceleration(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:phoenix.ad_data_upload.SYS_CHASSIS_t_message)
}

size_t SYS_CHASSIS_t_message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phoenix.ad_data_upload.SYS_CHASSIS_t_message)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 drivingmode = 1;
  if (this->drivingmode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->drivingmode());
  }

  // float steeringwheelangle = 2;
  if (!(this->steeringwheelangle() <= 0 && this->steeringwheelangle() >= 0)) {
    total_size += 1 + 4;
  }

  // float brakepedalvalue = 3;
  if (!(this->brakepedalvalue() <= 0 && this->brakepedalvalue() >= 0)) {
    total_size += 1 + 4;
  }

  // float accpedalvalue = 4;
  if (!(this->accpedalvalue() <= 0 && this->accpedalvalue() >= 0)) {
    total_size += 1 + 4;
  }

  // float velocity = 5;
  if (!(this->velocity() <= 0 && this->velocity() >= 0)) {
    total_size += 1 + 4;
  }

  // float acceleration = 6;
  if (!(this->acceleration() <= 0 && this->acceleration() >= 0)) {
    total_size += 1 + 4;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SYS_CHASSIS_t_message::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const SYS_CHASSIS_t_message*>(
      &from));
}

void SYS_CHASSIS_t_message::MergeFrom(const SYS_CHASSIS_t_message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phoenix.ad_data_upload.SYS_CHASSIS_t_message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.drivingmode() != 0) {
    set_drivingmode(from.drivingmode());
  }
  if (!(from.steeringwheelangle() <= 0 && from.steeringwheelangle() >= 0)) {
    set_steeringwheelangle(from.steeringwheelangle());
  }
  if (!(from.brakepedalvalue() <= 0 && from.brakepedalvalue() >= 0)) {
    set_brakepedalvalue(from.brakepedalvalue());
  }
  if (!(from.accpedalvalue() <= 0 && from.accpedalvalue() >= 0)) {
    set_accpedalvalue(from.accpedalvalue());
  }
  if (!(from.velocity() <= 0 && from.velocity() >= 0)) {
    set_velocity(from.velocity());
  }
  if (!(from.acceleration() <= 0 && from.acceleration() >= 0)) {
    set_acceleration(from.acceleration());
  }
}

void SYS_CHASSIS_t_message::CopyFrom(const SYS_CHASSIS_t_message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phoenix.ad_data_upload.SYS_CHASSIS_t_message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SYS_CHASSIS_t_message::IsInitialized() const {
  return true;
}

void SYS_CHASSIS_t_message::InternalSwap(SYS_CHASSIS_t_message* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(drivingmode_, other->drivingmode_);
  swap(steeringwheelangle_, other->steeringwheelangle_);
  swap(brakepedalvalue_, other->brakepedalvalue_);
  swap(accpedalvalue_, other->accpedalvalue_);
  swap(velocity_, other->velocity_);
  swap(acceleration_, other->acceleration_);
}

std::string SYS_CHASSIS_t_message::GetTypeName() const {
  return "phoenix.ad_data_upload.SYS_CHASSIS_t_message";
}


// ===================================================================

void SYS_ECUComm_Info_t_message::InitAsDefaultInstance() {
}
class SYS_ECUComm_Info_t_message::_Internal {
 public:
};

SYS_ECUComm_Info_t_message::SYS_ECUComm_Info_t_message()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:phoenix.ad_data_upload.SYS_ECUComm_Info_t_message)
}
SYS_ECUComm_Info_t_message::SYS_ECUComm_Info_t_message(const SYS_ECUComm_Info_t_message& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&syspowerstatus_, &from.syspowerstatus_,
    static_cast<size_t>(reinterpret_cast<char*>(&confirm_) -
    reinterpret_cast<char*>(&syspowerstatus_)) + sizeof(confirm_));
  // @@protoc_insertion_point(copy_constructor:phoenix.ad_data_upload.SYS_ECUComm_Info_t_message)
}

void SYS_ECUComm_Info_t_message::SharedCtor() {
  ::memset(&syspowerstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&confirm_) -
      reinterpret_cast<char*>(&syspowerstatus_)) + sizeof(confirm_));
}

SYS_ECUComm_Info_t_message::~SYS_ECUComm_Info_t_message() {
  // @@protoc_insertion_point(destructor:phoenix.ad_data_upload.SYS_ECUComm_Info_t_message)
  SharedDtor();
}

void SYS_ECUComm_Info_t_message::SharedDtor() {
}

void SYS_ECUComm_Info_t_message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SYS_ECUComm_Info_t_message& SYS_ECUComm_Info_t_message::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SYS_ECUComm_Info_t_message_Sys_5fDataUploadProto_5fsystem_2eproto.base);
  return *internal_default_instance();
}


void SYS_ECUComm_Info_t_message::Clear() {
// @@protoc_insertion_point(message_clear_start:phoenix.ad_data_upload.SYS_ECUComm_Info_t_message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&syspowerstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&confirm_) -
      reinterpret_cast<char*>(&syspowerstatus_)) + sizeof(confirm_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SYS_ECUComm_Info_t_message::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 SysPowerStatus = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          syspowerstatus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 SysInitSyncFlag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          sysinitsyncflag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 Confirm = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          confirm_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SYS_ECUComm_Info_t_message::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:phoenix.ad_data_upload.SYS_ECUComm_Info_t_message)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 SysPowerStatus = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &syspowerstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SysInitSyncFlag = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sysinitsyncflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Confirm = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &confirm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phoenix.ad_data_upload.SYS_ECUComm_Info_t_message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phoenix.ad_data_upload.SYS_ECUComm_Info_t_message)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SYS_ECUComm_Info_t_message::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phoenix.ad_data_upload.SYS_ECUComm_Info_t_message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 SysPowerStatus = 1;
  if (this->syspowerstatus() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(1, this->syspowerstatus(), output);
  }

  // uint32 SysInitSyncFlag = 2;
  if (this->sysinitsyncflag() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(2, this->sysinitsyncflag(), output);
  }

  // uint32 Confirm = 3;
  if (this->confirm() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(3, this->confirm(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:phoenix.ad_data_upload.SYS_ECUComm_Info_t_message)
}

size_t SYS_ECUComm_Info_t_message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phoenix.ad_data_upload.SYS_ECUComm_Info_t_message)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 SysPowerStatus = 1;
  if (this->syspowerstatus() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->syspowerstatus());
  }

  // uint32 SysInitSyncFlag = 2;
  if (this->sysinitsyncflag() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->sysinitsyncflag());
  }

  // uint32 Confirm = 3;
  if (this->confirm() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->confirm());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SYS_ECUComm_Info_t_message::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const SYS_ECUComm_Info_t_message*>(
      &from));
}

void SYS_ECUComm_Info_t_message::MergeFrom(const SYS_ECUComm_Info_t_message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phoenix.ad_data_upload.SYS_ECUComm_Info_t_message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.syspowerstatus() != 0) {
    set_syspowerstatus(from.syspowerstatus());
  }
  if (from.sysinitsyncflag() != 0) {
    set_sysinitsyncflag(from.sysinitsyncflag());
  }
  if (from.confirm() != 0) {
    set_confirm(from.confirm());
  }
}

void SYS_ECUComm_Info_t_message::CopyFrom(const SYS_ECUComm_Info_t_message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phoenix.ad_data_upload.SYS_ECUComm_Info_t_message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SYS_ECUComm_Info_t_message::IsInitialized() const {
  return true;
}

void SYS_ECUComm_Info_t_message::InternalSwap(SYS_ECUComm_Info_t_message* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(syspowerstatus_, other->syspowerstatus_);
  swap(sysinitsyncflag_, other->sysinitsyncflag_);
  swap(confirm_, other->confirm_);
}

std::string SYS_ECUComm_Info_t_message::GetTypeName() const {
  return "phoenix.ad_data_upload.SYS_ECUComm_Info_t_message";
}


// ===================================================================

void TC397_Sys_Tasktime_message::InitAsDefaultInstance() {
}
class TC397_Sys_Tasktime_message::_Internal {
 public:
};

TC397_Sys_Tasktime_message::TC397_Sys_Tasktime_message()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:phoenix.ad_data_upload.TC397_Sys_Tasktime_message)
}
TC397_Sys_Tasktime_message::TC397_Sys_Tasktime_message(const TC397_Sys_Tasktime_message& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&u64aplbehaviorplantask100ms_period_, &from.u64aplbehaviorplantask100ms_period_,
    static_cast<size_t>(reinterpret_cast<char*>(&u64aplverticalctrltask10ms_time_diff_) -
    reinterpret_cast<char*>(&u64aplbehaviorplantask100ms_period_)) + sizeof(u64aplverticalctrltask10ms_time_diff_));
  // @@protoc_insertion_point(copy_constructor:phoenix.ad_data_upload.TC397_Sys_Tasktime_message)
}

void TC397_Sys_Tasktime_message::SharedCtor() {
  ::memset(&u64aplbehaviorplantask100ms_period_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&u64aplverticalctrltask10ms_time_diff_) -
      reinterpret_cast<char*>(&u64aplbehaviorplantask100ms_period_)) + sizeof(u64aplverticalctrltask10ms_time_diff_));
}

TC397_Sys_Tasktime_message::~TC397_Sys_Tasktime_message() {
  // @@protoc_insertion_point(destructor:phoenix.ad_data_upload.TC397_Sys_Tasktime_message)
  SharedDtor();
}

void TC397_Sys_Tasktime_message::SharedDtor() {
}

void TC397_Sys_Tasktime_message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TC397_Sys_Tasktime_message& TC397_Sys_Tasktime_message::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TC397_Sys_Tasktime_message_Sys_5fDataUploadProto_5fsystem_2eproto.base);
  return *internal_default_instance();
}


void TC397_Sys_Tasktime_message::Clear() {
// @@protoc_insertion_point(message_clear_start:phoenix.ad_data_upload.TC397_Sys_Tasktime_message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&u64aplbehaviorplantask100ms_period_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&u64aplverticalctrltask10ms_time_diff_) -
      reinterpret_cast<char*>(&u64aplbehaviorplantask100ms_period_)) + sizeof(u64aplverticalctrltask10ms_time_diff_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TC397_Sys_Tasktime_message::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 u64AplBehaviorPlanTask100ms_period = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          u64aplbehaviorplantask100ms_period_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 u64AplCommMgrTask10ms_period = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          u64aplcommmgrtask10ms_period_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 u64AplLateralCtrlTask10ms_period = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          u64apllateralctrltask10ms_period_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 u64AplMotionPlanTask100ms_period = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          u64aplmotionplantask100ms_period_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 u64AplSafetyCtrlTask50ms_period = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          u64aplsafetyctrltask50ms_period_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 u64AplSystemMgrTask50ms_period = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          u64aplsystemmgrtask50ms_period_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 u64AplVerticalCtrlTask10ms_period = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          u64aplverticalctrltask10ms_period_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 u64AplBehaviorPlanTask100ms_time_diff = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          u64aplbehaviorplantask100ms_time_diff_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 u64AplCommMgrTask10ms_time_diff = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          u64aplcommmgrtask10ms_time_diff_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 u64AplLateralCtrlTask10ms_time_diff = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          u64apllateralctrltask10ms_time_diff_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 u64AplMotionPlanTask100ms_time_diff = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          u64aplmotionplantask100ms_time_diff_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 u64AplSafetyCtrlTask50ms_time_diff = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          u64aplsafetyctrltask50ms_time_diff_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 u64AplSystemMgrTask50ms_time_diff = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          u64aplsystemmgrtask50ms_time_diff_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 u64AplVerticalCtrlTask10ms_time_diff = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          u64aplverticalctrltask10ms_time_diff_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TC397_Sys_Tasktime_message::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:phoenix.ad_data_upload.TC397_Sys_Tasktime_message)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 u64AplBehaviorPlanTask100ms_period = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &u64aplbehaviorplantask100ms_period_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 u64AplCommMgrTask10ms_period = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &u64aplcommmgrtask10ms_period_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 u64AplLateralCtrlTask10ms_period = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &u64apllateralctrltask10ms_period_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 u64AplMotionPlanTask100ms_period = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &u64aplmotionplantask100ms_period_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 u64AplSafetyCtrlTask50ms_period = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &u64aplsafetyctrltask50ms_period_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 u64AplSystemMgrTask50ms_period = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &u64aplsystemmgrtask50ms_period_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 u64AplVerticalCtrlTask10ms_period = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &u64aplverticalctrltask10ms_period_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 u64AplBehaviorPlanTask100ms_time_diff = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &u64aplbehaviorplantask100ms_time_diff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 u64AplCommMgrTask10ms_time_diff = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (72 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &u64aplcommmgrtask10ms_time_diff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 u64AplLateralCtrlTask10ms_time_diff = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (80 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &u64apllateralctrltask10ms_time_diff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 u64AplMotionPlanTask100ms_time_diff = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (88 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &u64aplmotionplantask100ms_time_diff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 u64AplSafetyCtrlTask50ms_time_diff = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (96 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &u64aplsafetyctrltask50ms_time_diff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 u64AplSystemMgrTask50ms_time_diff = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (104 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &u64aplsystemmgrtask50ms_time_diff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 u64AplVerticalCtrlTask10ms_time_diff = 14;
      case 14: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (112 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &u64aplverticalctrltask10ms_time_diff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phoenix.ad_data_upload.TC397_Sys_Tasktime_message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phoenix.ad_data_upload.TC397_Sys_Tasktime_message)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TC397_Sys_Tasktime_message::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phoenix.ad_data_upload.TC397_Sys_Tasktime_message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 u64AplBehaviorPlanTask100ms_period = 1;
  if (this->u64aplbehaviorplantask100ms_period() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(1, this->u64aplbehaviorplantask100ms_period(), output);
  }

  // uint32 u64AplCommMgrTask10ms_period = 2;
  if (this->u64aplcommmgrtask10ms_period() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(2, this->u64aplcommmgrtask10ms_period(), output);
  }

  // uint32 u64AplLateralCtrlTask10ms_period = 3;
  if (this->u64apllateralctrltask10ms_period() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(3, this->u64apllateralctrltask10ms_period(), output);
  }

  // uint32 u64AplMotionPlanTask100ms_period = 4;
  if (this->u64aplmotionplantask100ms_period() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(4, this->u64aplmotionplantask100ms_period(), output);
  }

  // uint32 u64AplSafetyCtrlTask50ms_period = 5;
  if (this->u64aplsafetyctrltask50ms_period() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(5, this->u64aplsafetyctrltask50ms_period(), output);
  }

  // uint32 u64AplSystemMgrTask50ms_period = 6;
  if (this->u64aplsystemmgrtask50ms_period() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(6, this->u64aplsystemmgrtask50ms_period(), output);
  }

  // uint32 u64AplVerticalCtrlTask10ms_period = 7;
  if (this->u64aplverticalctrltask10ms_period() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(7, this->u64aplverticalctrltask10ms_period(), output);
  }

  // uint32 u64AplBehaviorPlanTask100ms_time_diff = 8;
  if (this->u64aplbehaviorplantask100ms_time_diff() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(8, this->u64aplbehaviorplantask100ms_time_diff(), output);
  }

  // uint32 u64AplCommMgrTask10ms_time_diff = 9;
  if (this->u64aplcommmgrtask10ms_time_diff() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(9, this->u64aplcommmgrtask10ms_time_diff(), output);
  }

  // uint32 u64AplLateralCtrlTask10ms_time_diff = 10;
  if (this->u64apllateralctrltask10ms_time_diff() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(10, this->u64apllateralctrltask10ms_time_diff(), output);
  }

  // uint32 u64AplMotionPlanTask100ms_time_diff = 11;
  if (this->u64aplmotionplantask100ms_time_diff() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(11, this->u64aplmotionplantask100ms_time_diff(), output);
  }

  // uint32 u64AplSafetyCtrlTask50ms_time_diff = 12;
  if (this->u64aplsafetyctrltask50ms_time_diff() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(12, this->u64aplsafetyctrltask50ms_time_diff(), output);
  }

  // uint32 u64AplSystemMgrTask50ms_time_diff = 13;
  if (this->u64aplsystemmgrtask50ms_time_diff() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(13, this->u64aplsystemmgrtask50ms_time_diff(), output);
  }

  // uint32 u64AplVerticalCtrlTask10ms_time_diff = 14;
  if (this->u64aplverticalctrltask10ms_time_diff() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(14, this->u64aplverticalctrltask10ms_time_diff(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:phoenix.ad_data_upload.TC397_Sys_Tasktime_message)
}

size_t TC397_Sys_Tasktime_message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phoenix.ad_data_upload.TC397_Sys_Tasktime_message)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 u64AplBehaviorPlanTask100ms_period = 1;
  if (this->u64aplbehaviorplantask100ms_period() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->u64aplbehaviorplantask100ms_period());
  }

  // uint32 u64AplCommMgrTask10ms_period = 2;
  if (this->u64aplcommmgrtask10ms_period() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->u64aplcommmgrtask10ms_period());
  }

  // uint32 u64AplLateralCtrlTask10ms_period = 3;
  if (this->u64apllateralctrltask10ms_period() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->u64apllateralctrltask10ms_period());
  }

  // uint32 u64AplMotionPlanTask100ms_period = 4;
  if (this->u64aplmotionplantask100ms_period() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->u64aplmotionplantask100ms_period());
  }

  // uint32 u64AplSafetyCtrlTask50ms_period = 5;
  if (this->u64aplsafetyctrltask50ms_period() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->u64aplsafetyctrltask50ms_period());
  }

  // uint32 u64AplSystemMgrTask50ms_period = 6;
  if (this->u64aplsystemmgrtask50ms_period() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->u64aplsystemmgrtask50ms_period());
  }

  // uint32 u64AplVerticalCtrlTask10ms_period = 7;
  if (this->u64aplverticalctrltask10ms_period() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->u64aplverticalctrltask10ms_period());
  }

  // uint32 u64AplBehaviorPlanTask100ms_time_diff = 8;
  if (this->u64aplbehaviorplantask100ms_time_diff() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->u64aplbehaviorplantask100ms_time_diff());
  }

  // uint32 u64AplCommMgrTask10ms_time_diff = 9;
  if (this->u64aplcommmgrtask10ms_time_diff() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->u64aplcommmgrtask10ms_time_diff());
  }

  // uint32 u64AplLateralCtrlTask10ms_time_diff = 10;
  if (this->u64apllateralctrltask10ms_time_diff() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->u64apllateralctrltask10ms_time_diff());
  }

  // uint32 u64AplMotionPlanTask100ms_time_diff = 11;
  if (this->u64aplmotionplantask100ms_time_diff() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->u64aplmotionplantask100ms_time_diff());
  }

  // uint32 u64AplSafetyCtrlTask50ms_time_diff = 12;
  if (this->u64aplsafetyctrltask50ms_time_diff() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->u64aplsafetyctrltask50ms_time_diff());
  }

  // uint32 u64AplSystemMgrTask50ms_time_diff = 13;
  if (this->u64aplsystemmgrtask50ms_time_diff() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->u64aplsystemmgrtask50ms_time_diff());
  }

  // uint32 u64AplVerticalCtrlTask10ms_time_diff = 14;
  if (this->u64aplverticalctrltask10ms_time_diff() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->u64aplverticalctrltask10ms_time_diff());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TC397_Sys_Tasktime_message::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const TC397_Sys_Tasktime_message*>(
      &from));
}

void TC397_Sys_Tasktime_message::MergeFrom(const TC397_Sys_Tasktime_message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phoenix.ad_data_upload.TC397_Sys_Tasktime_message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.u64aplbehaviorplantask100ms_period() != 0) {
    set_u64aplbehaviorplantask100ms_period(from.u64aplbehaviorplantask100ms_period());
  }
  if (from.u64aplcommmgrtask10ms_period() != 0) {
    set_u64aplcommmgrtask10ms_period(from.u64aplcommmgrtask10ms_period());
  }
  if (from.u64apllateralctrltask10ms_period() != 0) {
    set_u64apllateralctrltask10ms_period(from.u64apllateralctrltask10ms_period());
  }
  if (from.u64aplmotionplantask100ms_period() != 0) {
    set_u64aplmotionplantask100ms_period(from.u64aplmotionplantask100ms_period());
  }
  if (from.u64aplsafetyctrltask50ms_period() != 0) {
    set_u64aplsafetyctrltask50ms_period(from.u64aplsafetyctrltask50ms_period());
  }
  if (from.u64aplsystemmgrtask50ms_period() != 0) {
    set_u64aplsystemmgrtask50ms_period(from.u64aplsystemmgrtask50ms_period());
  }
  if (from.u64aplverticalctrltask10ms_period() != 0) {
    set_u64aplverticalctrltask10ms_period(from.u64aplverticalctrltask10ms_period());
  }
  if (from.u64aplbehaviorplantask100ms_time_diff() != 0) {
    set_u64aplbehaviorplantask100ms_time_diff(from.u64aplbehaviorplantask100ms_time_diff());
  }
  if (from.u64aplcommmgrtask10ms_time_diff() != 0) {
    set_u64aplcommmgrtask10ms_time_diff(from.u64aplcommmgrtask10ms_time_diff());
  }
  if (from.u64apllateralctrltask10ms_time_diff() != 0) {
    set_u64apllateralctrltask10ms_time_diff(from.u64apllateralctrltask10ms_time_diff());
  }
  if (from.u64aplmotionplantask100ms_time_diff() != 0) {
    set_u64aplmotionplantask100ms_time_diff(from.u64aplmotionplantask100ms_time_diff());
  }
  if (from.u64aplsafetyctrltask50ms_time_diff() != 0) {
    set_u64aplsafetyctrltask50ms_time_diff(from.u64aplsafetyctrltask50ms_time_diff());
  }
  if (from.u64aplsystemmgrtask50ms_time_diff() != 0) {
    set_u64aplsystemmgrtask50ms_time_diff(from.u64aplsystemmgrtask50ms_time_diff());
  }
  if (from.u64aplverticalctrltask10ms_time_diff() != 0) {
    set_u64aplverticalctrltask10ms_time_diff(from.u64aplverticalctrltask10ms_time_diff());
  }
}

void TC397_Sys_Tasktime_message::CopyFrom(const TC397_Sys_Tasktime_message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phoenix.ad_data_upload.TC397_Sys_Tasktime_message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TC397_Sys_Tasktime_message::IsInitialized() const {
  return true;
}

void TC397_Sys_Tasktime_message::InternalSwap(TC397_Sys_Tasktime_message* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(u64aplbehaviorplantask100ms_period_, other->u64aplbehaviorplantask100ms_period_);
  swap(u64aplcommmgrtask10ms_period_, other->u64aplcommmgrtask10ms_period_);
  swap(u64apllateralctrltask10ms_period_, other->u64apllateralctrltask10ms_period_);
  swap(u64aplmotionplantask100ms_period_, other->u64aplmotionplantask100ms_period_);
  swap(u64aplsafetyctrltask50ms_period_, other->u64aplsafetyctrltask50ms_period_);
  swap(u64aplsystemmgrtask50ms_period_, other->u64aplsystemmgrtask50ms_period_);
  swap(u64aplverticalctrltask10ms_period_, other->u64aplverticalctrltask10ms_period_);
  swap(u64aplbehaviorplantask100ms_time_diff_, other->u64aplbehaviorplantask100ms_time_diff_);
  swap(u64aplcommmgrtask10ms_time_diff_, other->u64aplcommmgrtask10ms_time_diff_);
  swap(u64apllateralctrltask10ms_time_diff_, other->u64apllateralctrltask10ms_time_diff_);
  swap(u64aplmotionplantask100ms_time_diff_, other->u64aplmotionplantask100ms_time_diff_);
  swap(u64aplsafetyctrltask50ms_time_diff_, other->u64aplsafetyctrltask50ms_time_diff_);
  swap(u64aplsystemmgrtask50ms_time_diff_, other->u64aplsystemmgrtask50ms_time_diff_);
  swap(u64aplverticalctrltask10ms_time_diff_, other->u64aplverticalctrltask10ms_time_diff_);
}

std::string TC397_Sys_Tasktime_message::GetTypeName() const {
  return "phoenix.ad_data_upload.TC397_Sys_Tasktime_message";
}


// ===================================================================

void st_Display_Debug__message::InitAsDefaultInstance() {
}
class st_Display_Debug__message::_Internal {
 public:
};

st_Display_Debug__message::st_Display_Debug__message()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:phoenix.ad_data_upload.st_Display_Debug__message)
}
st_Display_Debug__message::st_Display_Debug__message(const st_Display_Debug__message& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      u64reserve1_(from.u64reserve1_),
      u32reserve2_(from.u32reserve2_),
      u16reserve3_(from.u16reserve3_),
      u8reserve4_(from.u8reserve4_),
      int32reserve5_(from.int32reserve5_),
      int16reserve6_(from.int16reserve6_),
      int8reserve7_(from.int8reserve7_),
      f64reserve8_(from.f64reserve8_),
      f32reserve9_(from.f32reserve9_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:phoenix.ad_data_upload.st_Display_Debug__message)
}

void st_Display_Debug__message::SharedCtor() {
}

st_Display_Debug__message::~st_Display_Debug__message() {
  // @@protoc_insertion_point(destructor:phoenix.ad_data_upload.st_Display_Debug__message)
  SharedDtor();
}

void st_Display_Debug__message::SharedDtor() {
}

void st_Display_Debug__message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const st_Display_Debug__message& st_Display_Debug__message::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_st_Display_Debug__message_Sys_5fDataUploadProto_5fsystem_2eproto.base);
  return *internal_default_instance();
}


void st_Display_Debug__message::Clear() {
// @@protoc_insertion_point(message_clear_start:phoenix.ad_data_upload.st_Display_Debug__message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  u64reserve1_.Clear();
  u32reserve2_.Clear();
  u16reserve3_.Clear();
  u8reserve4_.Clear();
  int32reserve5_.Clear();
  int16reserve6_.Clear();
  int8reserve7_.Clear();
  f64reserve8_.Clear();
  f32reserve9_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* st_Display_Debug__message::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated uint32 u64Reserve1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(mutable_u64reserve1(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          add_u64reserve1(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 u32Reserve2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(mutable_u32reserve2(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          add_u32reserve2(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 u16Reserve3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(mutable_u16reserve3(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24) {
          add_u16reserve3(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 u8Reserve4 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(mutable_u8reserve4(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32) {
          add_u8reserve4(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated sint32 int32Reserve5 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedSInt32Parser(mutable_int32reserve5(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40) {
          add_int32reserve5(::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated sint32 int16Reserve6 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedSInt32Parser(mutable_int16reserve6(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48) {
          add_int16reserve6(::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated sint32 int8Reserve7 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedSInt32Parser(mutable_int8reserve7(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56) {
          add_int8reserve7(::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated double f64Reserve8 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(mutable_f64reserve8(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 65) {
          add_f64reserve8(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // repeated float f32Reserve9 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(mutable_f32reserve9(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 77) {
          add_f32reserve9(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool st_Display_Debug__message::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:phoenix.ad_data_upload.st_Display_Debug__message)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 u64Reserve1 = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPackedPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_u64reserve1())));
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_u64reserve1())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 u32Reserve2 = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPackedPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_u32reserve2())));
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_u32reserve2())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 u16Reserve3 = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPackedPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_u16reserve3())));
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_u16reserve3())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 u8Reserve4 = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPackedPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_u8reserve4())));
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_u8reserve4())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 int32Reserve5 = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPackedPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_int32reserve5())));
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32>(
                 1, 42u, input, this->mutable_int32reserve5())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 int16Reserve6 = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPackedPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_int16reserve6())));
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32>(
                 1, 50u, input, this->mutable_int16reserve6())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 int8Reserve7 = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPackedPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_int8reserve7())));
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32>(
                 1, 58u, input, this->mutable_int8reserve7())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double f64Reserve8 = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_f64reserve8())));
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (65 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 66u, input, this->mutable_f64reserve8())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float f32Reserve9 = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_f32reserve9())));
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (77 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 74u, input, this->mutable_f32reserve9())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phoenix.ad_data_upload.st_Display_Debug__message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phoenix.ad_data_upload.st_Display_Debug__message)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void st_Display_Debug__message::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phoenix.ad_data_upload.st_Display_Debug__message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 u64Reserve1 = 1;
  if (this->u64reserve1_size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteTag(1, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_u64reserve1_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->u64reserve1_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32NoTag(
      this->u64reserve1(i), output);
  }

  // repeated uint32 u32Reserve2 = 2;
  if (this->u32reserve2_size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteTag(2, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_u32reserve2_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->u32reserve2_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32NoTag(
      this->u32reserve2(i), output);
  }

  // repeated uint32 u16Reserve3 = 3;
  if (this->u16reserve3_size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteTag(3, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_u16reserve3_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->u16reserve3_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32NoTag(
      this->u16reserve3(i), output);
  }

  // repeated uint32 u8Reserve4 = 4;
  if (this->u8reserve4_size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteTag(4, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_u8reserve4_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->u8reserve4_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32NoTag(
      this->u8reserve4(i), output);
  }

  // repeated sint32 int32Reserve5 = 5;
  if (this->int32reserve5_size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteTag(5, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_int32reserve5_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->int32reserve5_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32NoTag(
      this->int32reserve5(i), output);
  }

  // repeated sint32 int16Reserve6 = 6;
  if (this->int16reserve6_size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteTag(6, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_int16reserve6_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->int16reserve6_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32NoTag(
      this->int16reserve6(i), output);
  }

  // repeated sint32 int8Reserve7 = 7;
  if (this->int8reserve7_size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteTag(7, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_int8reserve7_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->int8reserve7_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32NoTag(
      this->int8reserve7(i), output);
  }

  // repeated double f64Reserve8 = 8;
  if (this->f64reserve8_size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteTag(8, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_f64reserve8_cached_byte_size_.load(
        std::memory_order_relaxed));
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleArray(
      this->f64reserve8().data(), this->f64reserve8_size(), output);
  }

  // repeated float f32Reserve9 = 9;
  if (this->f32reserve9_size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteTag(9, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_f32reserve9_cached_byte_size_.load(
        std::memory_order_relaxed));
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatArray(
      this->f32reserve9().data(), this->f32reserve9_size(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:phoenix.ad_data_upload.st_Display_Debug__message)
}

size_t st_Display_Debug__message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phoenix.ad_data_upload.st_Display_Debug__message)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 u64Reserve1 = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->u64reserve1_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _u64reserve1_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint32 u32Reserve2 = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->u32reserve2_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _u32reserve2_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint32 u16Reserve3 = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->u16reserve3_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _u16reserve3_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint32 u8Reserve4 = 4;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->u8reserve4_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _u8reserve4_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated sint32 int32Reserve5 = 5;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      SInt32Size(this->int32reserve5_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _int32reserve5_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated sint32 int16Reserve6 = 6;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      SInt32Size(this->int16reserve6_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _int16reserve6_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated sint32 int8Reserve7 = 7;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      SInt32Size(this->int8reserve7_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _int8reserve7_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated double f64Reserve8 = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->f64reserve8_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _f64reserve8_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated float f32Reserve9 = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->f32reserve9_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _f32reserve9_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void st_Display_Debug__message::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const st_Display_Debug__message*>(
      &from));
}

void st_Display_Debug__message::MergeFrom(const st_Display_Debug__message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phoenix.ad_data_upload.st_Display_Debug__message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  u64reserve1_.MergeFrom(from.u64reserve1_);
  u32reserve2_.MergeFrom(from.u32reserve2_);
  u16reserve3_.MergeFrom(from.u16reserve3_);
  u8reserve4_.MergeFrom(from.u8reserve4_);
  int32reserve5_.MergeFrom(from.int32reserve5_);
  int16reserve6_.MergeFrom(from.int16reserve6_);
  int8reserve7_.MergeFrom(from.int8reserve7_);
  f64reserve8_.MergeFrom(from.f64reserve8_);
  f32reserve9_.MergeFrom(from.f32reserve9_);
}

void st_Display_Debug__message::CopyFrom(const st_Display_Debug__message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phoenix.ad_data_upload.st_Display_Debug__message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool st_Display_Debug__message::IsInitialized() const {
  return true;
}

void st_Display_Debug__message::InternalSwap(st_Display_Debug__message* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  u64reserve1_.InternalSwap(&other->u64reserve1_);
  u32reserve2_.InternalSwap(&other->u32reserve2_);
  u16reserve3_.InternalSwap(&other->u16reserve3_);
  u8reserve4_.InternalSwap(&other->u8reserve4_);
  int32reserve5_.InternalSwap(&other->int32reserve5_);
  int16reserve6_.InternalSwap(&other->int16reserve6_);
  int8reserve7_.InternalSwap(&other->int8reserve7_);
  f64reserve8_.InternalSwap(&other->f64reserve8_);
  f32reserve9_.InternalSwap(&other->f32reserve9_);
}

std::string st_Display_Debug__message::GetTypeName() const {
  return "phoenix.ad_data_upload.st_Display_Debug__message";
}


// ===================================================================

void System_Display_Data_message::InitAsDefaultInstance() {
  ::phoenix::ad_data_upload::_System_Display_Data_message_default_instance_._instance.get_mutable()->sys_control_info_ = const_cast< ::phoenix::ad_data_upload::SYS_CONTROL_INFO_t_message*>(
      ::phoenix::ad_data_upload::SYS_CONTROL_INFO_t_message::internal_default_instance());
  ::phoenix::ad_data_upload::_System_Display_Data_message_default_instance_._instance.get_mutable()->sys_chassis_ = const_cast< ::phoenix::ad_data_upload::SYS_CHASSIS_t_message*>(
      ::phoenix::ad_data_upload::SYS_CHASSIS_t_message::internal_default_instance());
  ::phoenix::ad_data_upload::_System_Display_Data_message_default_instance_._instance.get_mutable()->sys_ecu_com_info_ = const_cast< ::phoenix::ad_data_upload::SYS_ECUComm_Info_t_message*>(
      ::phoenix::ad_data_upload::SYS_ECUComm_Info_t_message::internal_default_instance());
  ::phoenix::ad_data_upload::_System_Display_Data_message_default_instance_._instance.get_mutable()->sys_task_time_ = const_cast< ::phoenix::ad_data_upload::TC397_Sys_Tasktime_message*>(
      ::phoenix::ad_data_upload::TC397_Sys_Tasktime_message::internal_default_instance());
  ::phoenix::ad_data_upload::_System_Display_Data_message_default_instance_._instance.get_mutable()->display_debug_ = const_cast< ::phoenix::ad_data_upload::st_Display_Debug__message*>(
      ::phoenix::ad_data_upload::st_Display_Debug__message::internal_default_instance());
}
class System_Display_Data_message::_Internal {
 public:
  static const ::phoenix::ad_data_upload::SYS_CONTROL_INFO_t_message& sys_control_info(const System_Display_Data_message* msg);
  static const ::phoenix::ad_data_upload::SYS_CHASSIS_t_message& sys_chassis(const System_Display_Data_message* msg);
  static const ::phoenix::ad_data_upload::SYS_ECUComm_Info_t_message& sys_ecu_com_info(const System_Display_Data_message* msg);
  static const ::phoenix::ad_data_upload::TC397_Sys_Tasktime_message& sys_task_time(const System_Display_Data_message* msg);
  static const ::phoenix::ad_data_upload::st_Display_Debug__message& display_debug(const System_Display_Data_message* msg);
};

const ::phoenix::ad_data_upload::SYS_CONTROL_INFO_t_message&
System_Display_Data_message::_Internal::sys_control_info(const System_Display_Data_message* msg) {
  return *msg->sys_control_info_;
}
const ::phoenix::ad_data_upload::SYS_CHASSIS_t_message&
System_Display_Data_message::_Internal::sys_chassis(const System_Display_Data_message* msg) {
  return *msg->sys_chassis_;
}
const ::phoenix::ad_data_upload::SYS_ECUComm_Info_t_message&
System_Display_Data_message::_Internal::sys_ecu_com_info(const System_Display_Data_message* msg) {
  return *msg->sys_ecu_com_info_;
}
const ::phoenix::ad_data_upload::TC397_Sys_Tasktime_message&
System_Display_Data_message::_Internal::sys_task_time(const System_Display_Data_message* msg) {
  return *msg->sys_task_time_;
}
const ::phoenix::ad_data_upload::st_Display_Debug__message&
System_Display_Data_message::_Internal::display_debug(const System_Display_Data_message* msg) {
  return *msg->display_debug_;
}
System_Display_Data_message::System_Display_Data_message()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:phoenix.ad_data_upload.System_Display_Data_message)
}
System_Display_Data_message::System_Display_Data_message(const System_Display_Data_message& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sys_control_info()) {
    sys_control_info_ = new ::phoenix::ad_data_upload::SYS_CONTROL_INFO_t_message(*from.sys_control_info_);
  } else {
    sys_control_info_ = nullptr;
  }
  if (from.has_sys_chassis()) {
    sys_chassis_ = new ::phoenix::ad_data_upload::SYS_CHASSIS_t_message(*from.sys_chassis_);
  } else {
    sys_chassis_ = nullptr;
  }
  if (from.has_sys_ecu_com_info()) {
    sys_ecu_com_info_ = new ::phoenix::ad_data_upload::SYS_ECUComm_Info_t_message(*from.sys_ecu_com_info_);
  } else {
    sys_ecu_com_info_ = nullptr;
  }
  if (from.has_sys_task_time()) {
    sys_task_time_ = new ::phoenix::ad_data_upload::TC397_Sys_Tasktime_message(*from.sys_task_time_);
  } else {
    sys_task_time_ = nullptr;
  }
  if (from.has_display_debug()) {
    display_debug_ = new ::phoenix::ad_data_upload::st_Display_Debug__message(*from.display_debug_);
  } else {
    display_debug_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:phoenix.ad_data_upload.System_Display_Data_message)
}

void System_Display_Data_message::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_System_Display_Data_message_Sys_5fDataUploadProto_5fsystem_2eproto.base);
  ::memset(&sys_control_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&display_debug_) -
      reinterpret_cast<char*>(&sys_control_info_)) + sizeof(display_debug_));
}

System_Display_Data_message::~System_Display_Data_message() {
  // @@protoc_insertion_point(destructor:phoenix.ad_data_upload.System_Display_Data_message)
  SharedDtor();
}

void System_Display_Data_message::SharedDtor() {
  if (this != internal_default_instance()) delete sys_control_info_;
  if (this != internal_default_instance()) delete sys_chassis_;
  if (this != internal_default_instance()) delete sys_ecu_com_info_;
  if (this != internal_default_instance()) delete sys_task_time_;
  if (this != internal_default_instance()) delete display_debug_;
}

void System_Display_Data_message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const System_Display_Data_message& System_Display_Data_message::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_System_Display_Data_message_Sys_5fDataUploadProto_5fsystem_2eproto.base);
  return *internal_default_instance();
}


void System_Display_Data_message::Clear() {
// @@protoc_insertion_point(message_clear_start:phoenix.ad_data_upload.System_Display_Data_message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && sys_control_info_ != nullptr) {
    delete sys_control_info_;
  }
  sys_control_info_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && sys_chassis_ != nullptr) {
    delete sys_chassis_;
  }
  sys_chassis_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && sys_ecu_com_info_ != nullptr) {
    delete sys_ecu_com_info_;
  }
  sys_ecu_com_info_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && sys_task_time_ != nullptr) {
    delete sys_task_time_;
  }
  sys_task_time_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && display_debug_ != nullptr) {
    delete display_debug_;
  }
  display_debug_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* System_Display_Data_message::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .phoenix.ad_data_upload.SYS_CONTROL_INFO_t_message sys_control_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_sys_control_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .phoenix.ad_data_upload.SYS_CHASSIS_t_message sys_chassis = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_sys_chassis(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .phoenix.ad_data_upload.SYS_ECUComm_Info_t_message sys_ecu_com_info = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_sys_ecu_com_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .phoenix.ad_data_upload.TC397_Sys_Tasktime_message sys_task_time = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(mutable_sys_task_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .phoenix.ad_data_upload.st_Display_Debug__message display_debug = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(mutable_display_debug(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool System_Display_Data_message::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:phoenix.ad_data_upload.System_Display_Data_message)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .phoenix.ad_data_upload.SYS_CONTROL_INFO_t_message sys_control_info = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_sys_control_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .phoenix.ad_data_upload.SYS_CHASSIS_t_message sys_chassis = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_sys_chassis()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .phoenix.ad_data_upload.SYS_ECUComm_Info_t_message sys_ecu_com_info = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_sys_ecu_com_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .phoenix.ad_data_upload.TC397_Sys_Tasktime_message sys_task_time = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_sys_task_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .phoenix.ad_data_upload.st_Display_Debug__message display_debug = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_display_debug()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phoenix.ad_data_upload.System_Display_Data_message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phoenix.ad_data_upload.System_Display_Data_message)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void System_Display_Data_message::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phoenix.ad_data_upload.System_Display_Data_message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .phoenix.ad_data_upload.SYS_CONTROL_INFO_t_message sys_control_info = 1;
  if (this->has_sys_control_info()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1, _Internal::sys_control_info(this), output);
  }

  // .phoenix.ad_data_upload.SYS_CHASSIS_t_message sys_chassis = 2;
  if (this->has_sys_chassis()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      2, _Internal::sys_chassis(this), output);
  }

  // .phoenix.ad_data_upload.SYS_ECUComm_Info_t_message sys_ecu_com_info = 3;
  if (this->has_sys_ecu_com_info()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      3, _Internal::sys_ecu_com_info(this), output);
  }

  // .phoenix.ad_data_upload.TC397_Sys_Tasktime_message sys_task_time = 4;
  if (this->has_sys_task_time()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      4, _Internal::sys_task_time(this), output);
  }

  // .phoenix.ad_data_upload.st_Display_Debug__message display_debug = 5;
  if (this->has_display_debug()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      5, _Internal::display_debug(this), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:phoenix.ad_data_upload.System_Display_Data_message)
}

size_t System_Display_Data_message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phoenix.ad_data_upload.System_Display_Data_message)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .phoenix.ad_data_upload.SYS_CONTROL_INFO_t_message sys_control_info = 1;
  if (this->has_sys_control_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *sys_control_info_);
  }

  // .phoenix.ad_data_upload.SYS_CHASSIS_t_message sys_chassis = 2;
  if (this->has_sys_chassis()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *sys_chassis_);
  }

  // .phoenix.ad_data_upload.SYS_ECUComm_Info_t_message sys_ecu_com_info = 3;
  if (this->has_sys_ecu_com_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *sys_ecu_com_info_);
  }

  // .phoenix.ad_data_upload.TC397_Sys_Tasktime_message sys_task_time = 4;
  if (this->has_sys_task_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *sys_task_time_);
  }

  // .phoenix.ad_data_upload.st_Display_Debug__message display_debug = 5;
  if (this->has_display_debug()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *display_debug_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void System_Display_Data_message::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const System_Display_Data_message*>(
      &from));
}

void System_Display_Data_message::MergeFrom(const System_Display_Data_message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phoenix.ad_data_upload.System_Display_Data_message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sys_control_info()) {
    mutable_sys_control_info()->::phoenix::ad_data_upload::SYS_CONTROL_INFO_t_message::MergeFrom(from.sys_control_info());
  }
  if (from.has_sys_chassis()) {
    mutable_sys_chassis()->::phoenix::ad_data_upload::SYS_CHASSIS_t_message::MergeFrom(from.sys_chassis());
  }
  if (from.has_sys_ecu_com_info()) {
    mutable_sys_ecu_com_info()->::phoenix::ad_data_upload::SYS_ECUComm_Info_t_message::MergeFrom(from.sys_ecu_com_info());
  }
  if (from.has_sys_task_time()) {
    mutable_sys_task_time()->::phoenix::ad_data_upload::TC397_Sys_Tasktime_message::MergeFrom(from.sys_task_time());
  }
  if (from.has_display_debug()) {
    mutable_display_debug()->::phoenix::ad_data_upload::st_Display_Debug__message::MergeFrom(from.display_debug());
  }
}

void System_Display_Data_message::CopyFrom(const System_Display_Data_message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phoenix.ad_data_upload.System_Display_Data_message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool System_Display_Data_message::IsInitialized() const {
  return true;
}

void System_Display_Data_message::InternalSwap(System_Display_Data_message* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(sys_control_info_, other->sys_control_info_);
  swap(sys_chassis_, other->sys_chassis_);
  swap(sys_ecu_com_info_, other->sys_ecu_com_info_);
  swap(sys_task_time_, other->sys_task_time_);
  swap(display_debug_, other->display_debug_);
}

std::string System_Display_Data_message::GetTypeName() const {
  return "phoenix.ad_data_upload.System_Display_Data_message";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ad_data_upload
}  // namespace phoenix
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::phoenix::ad_data_upload::SYS_CRUISING_SPEED_t_message* Arena::CreateMaybeMessage< ::phoenix::ad_data_upload::SYS_CRUISING_SPEED_t_message >(Arena* arena) {
  return Arena::CreateInternal< ::phoenix::ad_data_upload::SYS_CRUISING_SPEED_t_message >(arena);
}
template<> PROTOBUF_NOINLINE ::phoenix::ad_data_upload::SYS_SPEED_LIMIT_t_message* Arena::CreateMaybeMessage< ::phoenix::ad_data_upload::SYS_SPEED_LIMIT_t_message >(Arena* arena) {
  return Arena::CreateInternal< ::phoenix::ad_data_upload::SYS_SPEED_LIMIT_t_message >(arena);
}
template<> PROTOBUF_NOINLINE ::phoenix::ad_data_upload::SYS_CAR_DISTANCE_t_message* Arena::CreateMaybeMessage< ::phoenix::ad_data_upload::SYS_CAR_DISTANCE_t_message >(Arena* arena) {
  return Arena::CreateInternal< ::phoenix::ad_data_upload::SYS_CAR_DISTANCE_t_message >(arena);
}
template<> PROTOBUF_NOINLINE ::phoenix::ad_data_upload::SYS_PARAM_SET_t_message* Arena::CreateMaybeMessage< ::phoenix::ad_data_upload::SYS_PARAM_SET_t_message >(Arena* arena) {
  return Arena::CreateInternal< ::phoenix::ad_data_upload::SYS_PARAM_SET_t_message >(arena);
}
template<> PROTOBUF_NOINLINE ::phoenix::ad_data_upload::SYS_CONTROL_INFO_t_message* Arena::CreateMaybeMessage< ::phoenix::ad_data_upload::SYS_CONTROL_INFO_t_message >(Arena* arena) {
  return Arena::CreateInternal< ::phoenix::ad_data_upload::SYS_CONTROL_INFO_t_message >(arena);
}
template<> PROTOBUF_NOINLINE ::phoenix::ad_data_upload::SYS_CHASSIS_t_message* Arena::CreateMaybeMessage< ::phoenix::ad_data_upload::SYS_CHASSIS_t_message >(Arena* arena) {
  return Arena::CreateInternal< ::phoenix::ad_data_upload::SYS_CHASSIS_t_message >(arena);
}
template<> PROTOBUF_NOINLINE ::phoenix::ad_data_upload::SYS_ECUComm_Info_t_message* Arena::CreateMaybeMessage< ::phoenix::ad_data_upload::SYS_ECUComm_Info_t_message >(Arena* arena) {
  return Arena::CreateInternal< ::phoenix::ad_data_upload::SYS_ECUComm_Info_t_message >(arena);
}
template<> PROTOBUF_NOINLINE ::phoenix::ad_data_upload::TC397_Sys_Tasktime_message* Arena::CreateMaybeMessage< ::phoenix::ad_data_upload::TC397_Sys_Tasktime_message >(Arena* arena) {
  return Arena::CreateInternal< ::phoenix::ad_data_upload::TC397_Sys_Tasktime_message >(arena);
}
template<> PROTOBUF_NOINLINE ::phoenix::ad_data_upload::st_Display_Debug__message* Arena::CreateMaybeMessage< ::phoenix::ad_data_upload::st_Display_Debug__message >(Arena* arena) {
  return Arena::CreateInternal< ::phoenix::ad_data_upload::st_Display_Debug__message >(arena);
}
template<> PROTOBUF_NOINLINE ::phoenix::ad_data_upload::System_Display_Data_message* Arena::CreateMaybeMessage< ::phoenix::ad_data_upload::System_Display_Data_message >(Arena* arena) {
  return Arena::CreateInternal< ::phoenix::ad_data_upload::System_Display_Data_message >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
