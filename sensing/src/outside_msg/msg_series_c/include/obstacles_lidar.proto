syntax = "proto2";

package phoenix.msg.perception;

import "header.proto";

message ObstacleLidar {
  // 障碍物类型
  enum ObjType {
    // 未知
    OBJ_TYPE_UNKNOWN = 0;
    // 乘用车           
    OBJ_TYPE_PASSENGER_VEHICLE = 1;
    // 商用车     
    OBJ_TYPE_COMMERCIAL_VEHICLE = 2;
    // 特殊车    
    OBJ_TYPE_SPECIAL_VEHICLE = 3;
    // 未知类型机动车      
    OBJ_TYPE_OTHER_VEHICLE = 4;
    // 行人         
    OBJ_TYPE_PEDESTRIAN = 5;
    // 非机动车(骑行者) 
    OBJ_TYPE_BICYCLE = 6;
    // 动物               
    OBJ_TYPE_ANIMAL = 7;
    // 遗撒物              
    OBJ_TYPE_DISCARD = 8;
    // 路沿
    OBJ_TYPE_CURB = 9;
  };

  // 有向矩形包围盒
  message OBBox {
    // 中心坐标x
    optional float x = 1 [default = 0];
    // 中心坐标y
    optional float y = 2 [default = 0];
    // 航向角
    optional float heading = 3 [default = 0];
    // 半宽
    optional float half_width = 4 [default = 0];
    // 半长
    optional float half_length = 5 [default = 0];
  }

  // 障碍物ID
  optional int32 id = 1 [default = 0];
  // 障碍物的类型
  optional ObjType type = 2 [default = OBJ_TYPE_UNKNOWN];
  // Number of scans this object has been tracked for.
  optional int32 age = 3 [default = 0];
  // Number of scans this object has currently been predicted for without measurement update
  optional int32 prediction_age = 4 [default = 0];
  // 障碍物位置x坐标 (m)
  optional float x = 5 [default = 0];
  // 障碍物位置y坐标 (m)
  optional float y = 6 [default = 0];
  // 障碍物包围盒
  optional OBBox obb = 7;
  // 障碍物的x向速度 (m/sec)
  optional float v_x = 8 [default = 0];
  // 障碍物的y向速度 (m/sec)
  optional float v_y = 9 [default = 0];
  // 障碍物的x向加速度 (m/sec^2)
  optional float accel_x = 10 [default = 0];
  // 障碍物的y向加速度 (m/sec^2)
  optional float accel_y = 11 [default = 0];
  // 障碍物的角速度 (rad/sec)
  optional float yaw_rate = 12 [default = 0];
}

message ObstacleLidarList {
  // 雷达类型定义
  enum LidarType {
    LIDAR_TYPE_UNKNOWN = 0;
    LIDAR_TYPE_IBEO_4 = 1;
    LIDAR_TYPE_VLP_16 = 2;
  };

  // 报文头
  optional common.Header header = 1;
  // 雷达类型
  optional LidarType lidar_type = 2 [default = LIDAR_TYPE_UNKNOWN];
  // 障碍物列表
  repeated ObstacleLidar obstacles = 3;
}


