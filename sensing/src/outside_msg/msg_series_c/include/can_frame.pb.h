// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: can_frame.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_can_5fframe_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_can_5fframe_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_can_5fframe_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_can_5fframe_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_can_5fframe_2eproto;
namespace phoenix {
namespace can_dev {
namespace perception {
class CanFdFrame;
class CanFdFrameDefaultTypeInternal;
extern CanFdFrameDefaultTypeInternal _CanFdFrame_default_instance_;
class CanFdFrameList;
class CanFdFrameListDefaultTypeInternal;
extern CanFdFrameListDefaultTypeInternal _CanFdFrameList_default_instance_;
class CanFrame;
class CanFrameDefaultTypeInternal;
extern CanFrameDefaultTypeInternal _CanFrame_default_instance_;
class CanFrameList;
class CanFrameListDefaultTypeInternal;
extern CanFrameListDefaultTypeInternal _CanFrameList_default_instance_;
}  // namespace perception
}  // namespace can_dev
}  // namespace phoenix
PROTOBUF_NAMESPACE_OPEN
template<> ::phoenix::can_dev::perception::CanFdFrame* Arena::CreateMaybeMessage<::phoenix::can_dev::perception::CanFdFrame>(Arena*);
template<> ::phoenix::can_dev::perception::CanFdFrameList* Arena::CreateMaybeMessage<::phoenix::can_dev::perception::CanFdFrameList>(Arena*);
template<> ::phoenix::can_dev::perception::CanFrame* Arena::CreateMaybeMessage<::phoenix::can_dev::perception::CanFrame>(Arena*);
template<> ::phoenix::can_dev::perception::CanFrameList* Arena::CreateMaybeMessage<::phoenix::can_dev::perception::CanFrameList>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace phoenix {
namespace can_dev {
namespace perception {

// ===================================================================

class CanFrame :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:phoenix.can_dev.perception.CanFrame) */ {
 public:
  CanFrame();
  virtual ~CanFrame();

  CanFrame(const CanFrame& from);
  CanFrame(CanFrame&& from) noexcept
    : CanFrame() {
    *this = ::std::move(from);
  }

  inline CanFrame& operator=(const CanFrame& from) {
    CopyFrom(from);
    return *this;
  }
  inline CanFrame& operator=(CanFrame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CanFrame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CanFrame* internal_default_instance() {
    return reinterpret_cast<const CanFrame*>(
               &_CanFrame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CanFrame& a, CanFrame& b) {
    a.Swap(&b);
  }
  inline void Swap(CanFrame* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CanFrame* New() const final {
    return CreateMaybeMessage<CanFrame>(nullptr);
  }

  CanFrame* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CanFrame>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CanFrame& from);
  void MergeFrom(const CanFrame& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CanFrame* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "phoenix.can_dev.perception.CanFrame";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_can_5fframe_2eproto);
    return ::descriptor_table_can_5fframe_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTimeStampFieldNumber = 1,
    kIdFieldNumber = 2,
    kRTRFieldNumber = 3,
    kEXTFieldNumber = 4,
    kDataLenFieldNumber = 5,
    kData1FieldNumber = 6,
    kData2FieldNumber = 7,
  };
  // optional int64 time_stamp = 1;
  bool has_time_stamp() const;
  void clear_time_stamp();
  ::PROTOBUF_NAMESPACE_ID::int64 time_stamp() const;
  void set_time_stamp(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional uint32 id = 2;
  bool has_id() const;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 RTR = 3;
  bool has_rtr() const;
  void clear_rtr();
  ::PROTOBUF_NAMESPACE_ID::uint32 rtr() const;
  void set_rtr(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 EXT = 4;
  bool has_ext() const;
  void clear_ext();
  ::PROTOBUF_NAMESPACE_ID::uint32 ext() const;
  void set_ext(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional int32 data_len = 5;
  bool has_data_len() const;
  void clear_data_len();
  ::PROTOBUF_NAMESPACE_ID::int32 data_len() const;
  void set_data_len(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional uint32 data_1 = 6 [default = 0];
  bool has_data_1() const;
  void clear_data_1();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_1() const;
  void set_data_1(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 data_2 = 7 [default = 0];
  bool has_data_2() const;
  void clear_data_2();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_2() const;
  void set_data_2(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:phoenix.can_dev.perception.CanFrame)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_stamp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rtr_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ext_;
  ::PROTOBUF_NAMESPACE_ID::int32 data_len_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_1_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_2_;
  friend struct ::TableStruct_can_5fframe_2eproto;
};
// -------------------------------------------------------------------

class CanFrameList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:phoenix.can_dev.perception.CanFrameList) */ {
 public:
  CanFrameList();
  virtual ~CanFrameList();

  CanFrameList(const CanFrameList& from);
  CanFrameList(CanFrameList&& from) noexcept
    : CanFrameList() {
    *this = ::std::move(from);
  }

  inline CanFrameList& operator=(const CanFrameList& from) {
    CopyFrom(from);
    return *this;
  }
  inline CanFrameList& operator=(CanFrameList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CanFrameList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CanFrameList* internal_default_instance() {
    return reinterpret_cast<const CanFrameList*>(
               &_CanFrameList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CanFrameList& a, CanFrameList& b) {
    a.Swap(&b);
  }
  inline void Swap(CanFrameList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CanFrameList* New() const final {
    return CreateMaybeMessage<CanFrameList>(nullptr);
  }

  CanFrameList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CanFrameList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CanFrameList& from);
  void MergeFrom(const CanFrameList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CanFrameList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "phoenix.can_dev.perception.CanFrameList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_can_5fframe_2eproto);
    return ::descriptor_table_can_5fframe_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCanFrameListFieldNumber = 2,
    kCanFrameNumFieldNumber = 1,
  };
  // repeated .phoenix.can_dev.perception.CanFrame can_frame_list = 2;
  int can_frame_list_size() const;
  void clear_can_frame_list();
  ::phoenix::can_dev::perception::CanFrame* mutable_can_frame_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::phoenix::can_dev::perception::CanFrame >*
      mutable_can_frame_list();
  const ::phoenix::can_dev::perception::CanFrame& can_frame_list(int index) const;
  ::phoenix::can_dev::perception::CanFrame* add_can_frame_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::phoenix::can_dev::perception::CanFrame >&
      can_frame_list() const;

  // optional uint32 can_frame_num = 1 [default = 0];
  bool has_can_frame_num() const;
  void clear_can_frame_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 can_frame_num() const;
  void set_can_frame_num(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:phoenix.can_dev.perception.CanFrameList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::phoenix::can_dev::perception::CanFrame > can_frame_list_;
  ::PROTOBUF_NAMESPACE_ID::uint32 can_frame_num_;
  friend struct ::TableStruct_can_5fframe_2eproto;
};
// -------------------------------------------------------------------

class CanFdFrame :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:phoenix.can_dev.perception.CanFdFrame) */ {
 public:
  CanFdFrame();
  virtual ~CanFdFrame();

  CanFdFrame(const CanFdFrame& from);
  CanFdFrame(CanFdFrame&& from) noexcept
    : CanFdFrame() {
    *this = ::std::move(from);
  }

  inline CanFdFrame& operator=(const CanFdFrame& from) {
    CopyFrom(from);
    return *this;
  }
  inline CanFdFrame& operator=(CanFdFrame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CanFdFrame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CanFdFrame* internal_default_instance() {
    return reinterpret_cast<const CanFdFrame*>(
               &_CanFdFrame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CanFdFrame& a, CanFdFrame& b) {
    a.Swap(&b);
  }
  inline void Swap(CanFdFrame* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CanFdFrame* New() const final {
    return CreateMaybeMessage<CanFdFrame>(nullptr);
  }

  CanFdFrame* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CanFdFrame>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CanFdFrame& from);
  void MergeFrom(const CanFdFrame& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CanFdFrame* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "phoenix.can_dev.perception.CanFdFrame";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_can_5fframe_2eproto);
    return ::descriptor_table_can_5fframe_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTimeStampFieldNumber = 1,
    kIdFieldNumber = 2,
    kFDFieldNumber = 3,
    kRTRFieldNumber = 4,
    kEXTFieldNumber = 5,
    kBRSFieldNumber = 6,
    kESIFieldNumber = 7,
    kDataLenFieldNumber = 8,
    kData1FieldNumber = 9,
    kData2FieldNumber = 10,
    kData3FieldNumber = 11,
    kData4FieldNumber = 12,
    kData5FieldNumber = 13,
    kData6FieldNumber = 14,
    kData7FieldNumber = 15,
    kData8FieldNumber = 16,
    kData9FieldNumber = 17,
    kData10FieldNumber = 18,
    kData11FieldNumber = 19,
    kData12FieldNumber = 20,
    kData13FieldNumber = 21,
    kData14FieldNumber = 22,
    kData15FieldNumber = 23,
    kData16FieldNumber = 24,
  };
  // optional int64 time_stamp = 1;
  bool has_time_stamp() const;
  void clear_time_stamp();
  ::PROTOBUF_NAMESPACE_ID::int64 time_stamp() const;
  void set_time_stamp(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional uint32 id = 2 [default = 0];
  bool has_id() const;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 FD = 3 [default = 0];
  bool has_fd() const;
  void clear_fd();
  ::PROTOBUF_NAMESPACE_ID::uint32 fd() const;
  void set_fd(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 RTR = 4 [default = 0];
  bool has_rtr() const;
  void clear_rtr();
  ::PROTOBUF_NAMESPACE_ID::uint32 rtr() const;
  void set_rtr(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 EXT = 5 [default = 0];
  bool has_ext() const;
  void clear_ext();
  ::PROTOBUF_NAMESPACE_ID::uint32 ext() const;
  void set_ext(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 BRS = 6 [default = 0];
  bool has_brs() const;
  void clear_brs();
  ::PROTOBUF_NAMESPACE_ID::uint32 brs() const;
  void set_brs(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 ESI = 7 [default = 0];
  bool has_esi() const;
  void clear_esi();
  ::PROTOBUF_NAMESPACE_ID::uint32 esi() const;
  void set_esi(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional int32 data_len = 8 [default = 0];
  bool has_data_len() const;
  void clear_data_len();
  ::PROTOBUF_NAMESPACE_ID::int32 data_len() const;
  void set_data_len(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional uint32 data_1 = 9 [default = 0];
  bool has_data_1() const;
  void clear_data_1();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_1() const;
  void set_data_1(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 data_2 = 10 [default = 0];
  bool has_data_2() const;
  void clear_data_2();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_2() const;
  void set_data_2(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 data_3 = 11 [default = 0];
  bool has_data_3() const;
  void clear_data_3();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_3() const;
  void set_data_3(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 data_4 = 12 [default = 0];
  bool has_data_4() const;
  void clear_data_4();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_4() const;
  void set_data_4(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 data_5 = 13 [default = 0];
  bool has_data_5() const;
  void clear_data_5();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_5() const;
  void set_data_5(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 data_6 = 14 [default = 0];
  bool has_data_6() const;
  void clear_data_6();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_6() const;
  void set_data_6(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 data_7 = 15 [default = 0];
  bool has_data_7() const;
  void clear_data_7();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_7() const;
  void set_data_7(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 data_8 = 16 [default = 0];
  bool has_data_8() const;
  void clear_data_8();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_8() const;
  void set_data_8(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 data_9 = 17 [default = 0];
  bool has_data_9() const;
  void clear_data_9();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_9() const;
  void set_data_9(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 data_10 = 18 [default = 0];
  bool has_data_10() const;
  void clear_data_10();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_10() const;
  void set_data_10(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 data_11 = 19 [default = 0];
  bool has_data_11() const;
  void clear_data_11();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_11() const;
  void set_data_11(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 data_12 = 20 [default = 0];
  bool has_data_12() const;
  void clear_data_12();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_12() const;
  void set_data_12(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 data_13 = 21 [default = 0];
  bool has_data_13() const;
  void clear_data_13();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_13() const;
  void set_data_13(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 data_14 = 22 [default = 0];
  bool has_data_14() const;
  void clear_data_14();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_14() const;
  void set_data_14(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 data_15 = 23 [default = 0];
  bool has_data_15() const;
  void clear_data_15();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_15() const;
  void set_data_15(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 data_16 = 24 [default = 0];
  bool has_data_16() const;
  void clear_data_16();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_16() const;
  void set_data_16(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:phoenix.can_dev.perception.CanFdFrame)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_stamp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fd_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rtr_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ext_;
  ::PROTOBUF_NAMESPACE_ID::uint32 brs_;
  ::PROTOBUF_NAMESPACE_ID::uint32 esi_;
  ::PROTOBUF_NAMESPACE_ID::int32 data_len_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_1_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_2_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_3_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_4_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_5_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_6_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_7_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_8_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_9_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_10_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_11_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_12_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_13_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_14_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_15_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_16_;
  friend struct ::TableStruct_can_5fframe_2eproto;
};
// -------------------------------------------------------------------

class CanFdFrameList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:phoenix.can_dev.perception.CanFdFrameList) */ {
 public:
  CanFdFrameList();
  virtual ~CanFdFrameList();

  CanFdFrameList(const CanFdFrameList& from);
  CanFdFrameList(CanFdFrameList&& from) noexcept
    : CanFdFrameList() {
    *this = ::std::move(from);
  }

  inline CanFdFrameList& operator=(const CanFdFrameList& from) {
    CopyFrom(from);
    return *this;
  }
  inline CanFdFrameList& operator=(CanFdFrameList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CanFdFrameList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CanFdFrameList* internal_default_instance() {
    return reinterpret_cast<const CanFdFrameList*>(
               &_CanFdFrameList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CanFdFrameList& a, CanFdFrameList& b) {
    a.Swap(&b);
  }
  inline void Swap(CanFdFrameList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CanFdFrameList* New() const final {
    return CreateMaybeMessage<CanFdFrameList>(nullptr);
  }

  CanFdFrameList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CanFdFrameList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CanFdFrameList& from);
  void MergeFrom(const CanFdFrameList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CanFdFrameList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "phoenix.can_dev.perception.CanFdFrameList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_can_5fframe_2eproto);
    return ::descriptor_table_can_5fframe_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCanfdFrameListFieldNumber = 2,
    kCanfdFrameNumFieldNumber = 1,
  };
  // repeated .phoenix.can_dev.perception.CanFdFrame canfd_frame_list = 2;
  int canfd_frame_list_size() const;
  void clear_canfd_frame_list();
  ::phoenix::can_dev::perception::CanFdFrame* mutable_canfd_frame_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::phoenix::can_dev::perception::CanFdFrame >*
      mutable_canfd_frame_list();
  const ::phoenix::can_dev::perception::CanFdFrame& canfd_frame_list(int index) const;
  ::phoenix::can_dev::perception::CanFdFrame* add_canfd_frame_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::phoenix::can_dev::perception::CanFdFrame >&
      canfd_frame_list() const;

  // optional uint32 canfd_frame_num = 1 [default = 0];
  bool has_canfd_frame_num() const;
  void clear_canfd_frame_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 canfd_frame_num() const;
  void set_canfd_frame_num(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:phoenix.can_dev.perception.CanFdFrameList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::phoenix::can_dev::perception::CanFdFrame > canfd_frame_list_;
  ::PROTOBUF_NAMESPACE_ID::uint32 canfd_frame_num_;
  friend struct ::TableStruct_can_5fframe_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CanFrame

// optional int64 time_stamp = 1;
inline bool CanFrame::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CanFrame::clear_time_stamp() {
  time_stamp_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CanFrame::time_stamp() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFrame.time_stamp)
  return time_stamp_;
}
inline void CanFrame::set_time_stamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  time_stamp_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFrame.time_stamp)
}

// optional uint32 id = 2;
inline bool CanFrame::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CanFrame::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CanFrame::id() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFrame.id)
  return id_;
}
inline void CanFrame::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  id_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFrame.id)
}

// optional uint32 RTR = 3;
inline bool CanFrame::has_rtr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CanFrame::clear_rtr() {
  rtr_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CanFrame::rtr() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFrame.RTR)
  return rtr_;
}
inline void CanFrame::set_rtr(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  rtr_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFrame.RTR)
}

// optional uint32 EXT = 4;
inline bool CanFrame::has_ext() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CanFrame::clear_ext() {
  ext_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CanFrame::ext() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFrame.EXT)
  return ext_;
}
inline void CanFrame::set_ext(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  ext_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFrame.EXT)
}

// optional int32 data_len = 5;
inline bool CanFrame::has_data_len() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CanFrame::clear_data_len() {
  data_len_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CanFrame::data_len() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFrame.data_len)
  return data_len_;
}
inline void CanFrame::set_data_len(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  data_len_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFrame.data_len)
}

// optional uint32 data_1 = 6 [default = 0];
inline bool CanFrame::has_data_1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CanFrame::clear_data_1() {
  data_1_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CanFrame::data_1() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFrame.data_1)
  return data_1_;
}
inline void CanFrame::set_data_1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  data_1_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFrame.data_1)
}

// optional uint32 data_2 = 7 [default = 0];
inline bool CanFrame::has_data_2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CanFrame::clear_data_2() {
  data_2_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CanFrame::data_2() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFrame.data_2)
  return data_2_;
}
inline void CanFrame::set_data_2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  data_2_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFrame.data_2)
}

// -------------------------------------------------------------------

// CanFrameList

// optional uint32 can_frame_num = 1 [default = 0];
inline bool CanFrameList::has_can_frame_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CanFrameList::clear_can_frame_num() {
  can_frame_num_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CanFrameList::can_frame_num() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFrameList.can_frame_num)
  return can_frame_num_;
}
inline void CanFrameList::set_can_frame_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  can_frame_num_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFrameList.can_frame_num)
}

// repeated .phoenix.can_dev.perception.CanFrame can_frame_list = 2;
inline int CanFrameList::can_frame_list_size() const {
  return can_frame_list_.size();
}
inline void CanFrameList::clear_can_frame_list() {
  can_frame_list_.Clear();
}
inline ::phoenix::can_dev::perception::CanFrame* CanFrameList::mutable_can_frame_list(int index) {
  // @@protoc_insertion_point(field_mutable:phoenix.can_dev.perception.CanFrameList.can_frame_list)
  return can_frame_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::phoenix::can_dev::perception::CanFrame >*
CanFrameList::mutable_can_frame_list() {
  // @@protoc_insertion_point(field_mutable_list:phoenix.can_dev.perception.CanFrameList.can_frame_list)
  return &can_frame_list_;
}
inline const ::phoenix::can_dev::perception::CanFrame& CanFrameList::can_frame_list(int index) const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFrameList.can_frame_list)
  return can_frame_list_.Get(index);
}
inline ::phoenix::can_dev::perception::CanFrame* CanFrameList::add_can_frame_list() {
  // @@protoc_insertion_point(field_add:phoenix.can_dev.perception.CanFrameList.can_frame_list)
  return can_frame_list_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::phoenix::can_dev::perception::CanFrame >&
CanFrameList::can_frame_list() const {
  // @@protoc_insertion_point(field_list:phoenix.can_dev.perception.CanFrameList.can_frame_list)
  return can_frame_list_;
}

// -------------------------------------------------------------------

// CanFdFrame

// optional int64 time_stamp = 1;
inline bool CanFdFrame::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CanFdFrame::clear_time_stamp() {
  time_stamp_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CanFdFrame::time_stamp() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFdFrame.time_stamp)
  return time_stamp_;
}
inline void CanFdFrame::set_time_stamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  time_stamp_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFdFrame.time_stamp)
}

// optional uint32 id = 2 [default = 0];
inline bool CanFdFrame::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CanFdFrame::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CanFdFrame::id() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFdFrame.id)
  return id_;
}
inline void CanFdFrame::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  id_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFdFrame.id)
}

// optional uint32 FD = 3 [default = 0];
inline bool CanFdFrame::has_fd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CanFdFrame::clear_fd() {
  fd_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CanFdFrame::fd() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFdFrame.FD)
  return fd_;
}
inline void CanFdFrame::set_fd(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  fd_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFdFrame.FD)
}

// optional uint32 RTR = 4 [default = 0];
inline bool CanFdFrame::has_rtr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CanFdFrame::clear_rtr() {
  rtr_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CanFdFrame::rtr() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFdFrame.RTR)
  return rtr_;
}
inline void CanFdFrame::set_rtr(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  rtr_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFdFrame.RTR)
}

// optional uint32 EXT = 5 [default = 0];
inline bool CanFdFrame::has_ext() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CanFdFrame::clear_ext() {
  ext_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CanFdFrame::ext() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFdFrame.EXT)
  return ext_;
}
inline void CanFdFrame::set_ext(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  ext_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFdFrame.EXT)
}

// optional uint32 BRS = 6 [default = 0];
inline bool CanFdFrame::has_brs() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CanFdFrame::clear_brs() {
  brs_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CanFdFrame::brs() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFdFrame.BRS)
  return brs_;
}
inline void CanFdFrame::set_brs(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  brs_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFdFrame.BRS)
}

// optional uint32 ESI = 7 [default = 0];
inline bool CanFdFrame::has_esi() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CanFdFrame::clear_esi() {
  esi_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CanFdFrame::esi() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFdFrame.ESI)
  return esi_;
}
inline void CanFdFrame::set_esi(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  esi_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFdFrame.ESI)
}

// optional int32 data_len = 8 [default = 0];
inline bool CanFdFrame::has_data_len() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CanFdFrame::clear_data_len() {
  data_len_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CanFdFrame::data_len() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFdFrame.data_len)
  return data_len_;
}
inline void CanFdFrame::set_data_len(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  data_len_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFdFrame.data_len)
}

// optional uint32 data_1 = 9 [default = 0];
inline bool CanFdFrame::has_data_1() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CanFdFrame::clear_data_1() {
  data_1_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CanFdFrame::data_1() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFdFrame.data_1)
  return data_1_;
}
inline void CanFdFrame::set_data_1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  data_1_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFdFrame.data_1)
}

// optional uint32 data_2 = 10 [default = 0];
inline bool CanFdFrame::has_data_2() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CanFdFrame::clear_data_2() {
  data_2_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CanFdFrame::data_2() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFdFrame.data_2)
  return data_2_;
}
inline void CanFdFrame::set_data_2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  data_2_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFdFrame.data_2)
}

// optional uint32 data_3 = 11 [default = 0];
inline bool CanFdFrame::has_data_3() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CanFdFrame::clear_data_3() {
  data_3_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CanFdFrame::data_3() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFdFrame.data_3)
  return data_3_;
}
inline void CanFdFrame::set_data_3(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  data_3_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFdFrame.data_3)
}

// optional uint32 data_4 = 12 [default = 0];
inline bool CanFdFrame::has_data_4() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CanFdFrame::clear_data_4() {
  data_4_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CanFdFrame::data_4() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFdFrame.data_4)
  return data_4_;
}
inline void CanFdFrame::set_data_4(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  data_4_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFdFrame.data_4)
}

// optional uint32 data_5 = 13 [default = 0];
inline bool CanFdFrame::has_data_5() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CanFdFrame::clear_data_5() {
  data_5_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CanFdFrame::data_5() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFdFrame.data_5)
  return data_5_;
}
inline void CanFdFrame::set_data_5(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  data_5_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFdFrame.data_5)
}

// optional uint32 data_6 = 14 [default = 0];
inline bool CanFdFrame::has_data_6() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CanFdFrame::clear_data_6() {
  data_6_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CanFdFrame::data_6() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFdFrame.data_6)
  return data_6_;
}
inline void CanFdFrame::set_data_6(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  data_6_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFdFrame.data_6)
}

// optional uint32 data_7 = 15 [default = 0];
inline bool CanFdFrame::has_data_7() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CanFdFrame::clear_data_7() {
  data_7_ = 0u;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CanFdFrame::data_7() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFdFrame.data_7)
  return data_7_;
}
inline void CanFdFrame::set_data_7(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00004000u;
  data_7_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFdFrame.data_7)
}

// optional uint32 data_8 = 16 [default = 0];
inline bool CanFdFrame::has_data_8() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CanFdFrame::clear_data_8() {
  data_8_ = 0u;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CanFdFrame::data_8() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFdFrame.data_8)
  return data_8_;
}
inline void CanFdFrame::set_data_8(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00008000u;
  data_8_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFdFrame.data_8)
}

// optional uint32 data_9 = 17 [default = 0];
inline bool CanFdFrame::has_data_9() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CanFdFrame::clear_data_9() {
  data_9_ = 0u;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CanFdFrame::data_9() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFdFrame.data_9)
  return data_9_;
}
inline void CanFdFrame::set_data_9(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00010000u;
  data_9_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFdFrame.data_9)
}

// optional uint32 data_10 = 18 [default = 0];
inline bool CanFdFrame::has_data_10() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CanFdFrame::clear_data_10() {
  data_10_ = 0u;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CanFdFrame::data_10() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFdFrame.data_10)
  return data_10_;
}
inline void CanFdFrame::set_data_10(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00020000u;
  data_10_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFdFrame.data_10)
}

// optional uint32 data_11 = 19 [default = 0];
inline bool CanFdFrame::has_data_11() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CanFdFrame::clear_data_11() {
  data_11_ = 0u;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CanFdFrame::data_11() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFdFrame.data_11)
  return data_11_;
}
inline void CanFdFrame::set_data_11(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00040000u;
  data_11_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFdFrame.data_11)
}

// optional uint32 data_12 = 20 [default = 0];
inline bool CanFdFrame::has_data_12() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CanFdFrame::clear_data_12() {
  data_12_ = 0u;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CanFdFrame::data_12() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFdFrame.data_12)
  return data_12_;
}
inline void CanFdFrame::set_data_12(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00080000u;
  data_12_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFdFrame.data_12)
}

// optional uint32 data_13 = 21 [default = 0];
inline bool CanFdFrame::has_data_13() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CanFdFrame::clear_data_13() {
  data_13_ = 0u;
  _has_bits_[0] &= ~0x00100000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CanFdFrame::data_13() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFdFrame.data_13)
  return data_13_;
}
inline void CanFdFrame::set_data_13(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00100000u;
  data_13_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFdFrame.data_13)
}

// optional uint32 data_14 = 22 [default = 0];
inline bool CanFdFrame::has_data_14() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CanFdFrame::clear_data_14() {
  data_14_ = 0u;
  _has_bits_[0] &= ~0x00200000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CanFdFrame::data_14() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFdFrame.data_14)
  return data_14_;
}
inline void CanFdFrame::set_data_14(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00200000u;
  data_14_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFdFrame.data_14)
}

// optional uint32 data_15 = 23 [default = 0];
inline bool CanFdFrame::has_data_15() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CanFdFrame::clear_data_15() {
  data_15_ = 0u;
  _has_bits_[0] &= ~0x00400000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CanFdFrame::data_15() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFdFrame.data_15)
  return data_15_;
}
inline void CanFdFrame::set_data_15(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00400000u;
  data_15_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFdFrame.data_15)
}

// optional uint32 data_16 = 24 [default = 0];
inline bool CanFdFrame::has_data_16() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CanFdFrame::clear_data_16() {
  data_16_ = 0u;
  _has_bits_[0] &= ~0x00800000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CanFdFrame::data_16() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFdFrame.data_16)
  return data_16_;
}
inline void CanFdFrame::set_data_16(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00800000u;
  data_16_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFdFrame.data_16)
}

// -------------------------------------------------------------------

// CanFdFrameList

// optional uint32 canfd_frame_num = 1 [default = 0];
inline bool CanFdFrameList::has_canfd_frame_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CanFdFrameList::clear_canfd_frame_num() {
  canfd_frame_num_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CanFdFrameList::canfd_frame_num() const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFdFrameList.canfd_frame_num)
  return canfd_frame_num_;
}
inline void CanFdFrameList::set_canfd_frame_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  canfd_frame_num_ = value;
  // @@protoc_insertion_point(field_set:phoenix.can_dev.perception.CanFdFrameList.canfd_frame_num)
}

// repeated .phoenix.can_dev.perception.CanFdFrame canfd_frame_list = 2;
inline int CanFdFrameList::canfd_frame_list_size() const {
  return canfd_frame_list_.size();
}
inline void CanFdFrameList::clear_canfd_frame_list() {
  canfd_frame_list_.Clear();
}
inline ::phoenix::can_dev::perception::CanFdFrame* CanFdFrameList::mutable_canfd_frame_list(int index) {
  // @@protoc_insertion_point(field_mutable:phoenix.can_dev.perception.CanFdFrameList.canfd_frame_list)
  return canfd_frame_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::phoenix::can_dev::perception::CanFdFrame >*
CanFdFrameList::mutable_canfd_frame_list() {
  // @@protoc_insertion_point(field_mutable_list:phoenix.can_dev.perception.CanFdFrameList.canfd_frame_list)
  return &canfd_frame_list_;
}
inline const ::phoenix::can_dev::perception::CanFdFrame& CanFdFrameList::canfd_frame_list(int index) const {
  // @@protoc_insertion_point(field_get:phoenix.can_dev.perception.CanFdFrameList.canfd_frame_list)
  return canfd_frame_list_.Get(index);
}
inline ::phoenix::can_dev::perception::CanFdFrame* CanFdFrameList::add_canfd_frame_list() {
  // @@protoc_insertion_point(field_add:phoenix.can_dev.perception.CanFdFrameList.canfd_frame_list)
  return canfd_frame_list_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::phoenix::can_dev::perception::CanFdFrame >&
CanFdFrameList::canfd_frame_list() const {
  // @@protoc_insertion_point(field_list:phoenix.can_dev.perception.CanFdFrameList.canfd_frame_list)
  return canfd_frame_list_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace perception
}  // namespace can_dev
}  // namespace phoenix

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_can_5fframe_2eproto
